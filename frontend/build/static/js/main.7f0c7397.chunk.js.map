{"version":3,"sources":["services/user-service.js","services/data-service.js","img/logo.svg","routes/Homepage.js","components/Row.js","components/DataForm.js","components/ToastMsg.js","components/YearsGraph.js","components/MonthsGraph.js","components/MonthsSummaryGraph.js","routes/MyActivities.js","components/OnProgressModal.js","nav/Navigation.js","components/RegisterForm.js","components/LoginDialog.js","components/ConfirmModal.js","App.js","index.js"],"names":["require","config","baseUrl","console","log","login","user","a","axios","post","_response","response","code","status","data","undefined","error","message","register","newUser","getDataFromMongo","get","updateDataToMongo","Homepage","style","paddingLeft","paddingTop","color","fontSize","marginTop","display","alignItems","justifyContent","src","Logo","width","alt","Row","mode","item","func","_selectedIndex","useState","typeOptions","id","Date","startDate","setStartDate","endDate","setEndDate","type","setType","selectedIndex","setSelectedIndex","useEffect","handleRow","values","dateString","date","month","getMonth","toString","day","getDate","year","getFullYear","length","getFormmatedDate","start_date","moving_time","distance","average_speed","average_heartrate","background","map","ind","textAlign","Button","className","_id","onClick","e","target","marginLeft","required","selected","onChange","Form","Control","as","custom","value","event","preventDefault","DataForm","header","thisFunc","HeaderRow","maxHeight","autoComplete","Table","responsive","ride_id","ToastMsg","show","close","params","backgroundColor","backgroundcolor","position","top","left","transform","autohide","Toast","onClose","delay","Header","Body","YearsGraph","condition","tmp","df","_years","setMode","val","setVal","years","setYears","_val","forEach","sub_df","loc","columns","toDateTime","eq","rows","sum","Math","round","push","layout","gDf","DataFrame","ride","index","plot_bgcolor","paper_bgcolor","yaxis","title","xaxis","displayModeBar","displaylogo","plot","bar","text","x","line","MonthsGraph","setYear","Array","end","keys","months","_year","parseInt","MonthsSummaryGraph","items","i","legend","bgcolor","font","family","size","MyActivities","callBack","setDf","myDataToShow","setMyDataToShow","showMode","setShowMode","showToast","setShowToast","getYears","getData","sf","Series","unique","handleForm","_mode","doQuery","setUTCHours","toISOString","result","at","iloc","toJSON","toFixed","Container","Navbar","variant","Toggle","aria-controls","NavItem","Col","OnProgressModal","Modal","backdrop","keyboard","centered","disabled","Spinner","animation","role","aria-hidden","Navigation","admin","progress","progressShow","setProgressShow","path","useLocation","pathname","to","paddingRight","element","replace","RegisterForm","firstName","setFirstName","surName","setSurName","email","setEmail","password","setPassword","setAdmin","setMessage","handleRegin","p","regData","closeParent","clearFields","onSubmit","Group","Label","placeholder","controlId","Check","label","checked","Footer","LoginDialog","_show","showDialog","setShow","showRegister","setShowRegister","btnClose","labels","setLabels","regLabels","handleLogin","auth","onHide","closeButton","Title","ConfirmModal","updateDb","aria-labelledby","App","mongoData","setMongoData","setUser","userName","setUserName","token","setToken","setLogin","confirmShow","setConfirmShow","navigate","useNavigate","getConfig","headers","Authorization","dataService","socket","socketIOClient","on","disconnect","exception","alert","handleRegister","userService","firstname","topic","updateDatabase","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f0c7397.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nrequire('dotenv').config();\r\nlet baseUrl = '/api/user/';\r\nif (process.env.NODE_ENV === 'development')\r\n  baseUrl = 'http://localhost:5000/api/user/';\r\n\r\nconsole.log(baseUrl);\r\n\r\nconst login = async (user) => {\r\n\r\n  try {\r\n\r\n    const _response = await axios.post(baseUrl + 'login', user);\r\n\r\n    const response = {\r\n      code: _response.status,\r\n      data: _response.data\r\n    }\r\n\r\n    return response;\r\n\r\n  } catch (exception) {\r\n\r\n\r\n    let error = exception.response;\r\n\r\n    if (error !== undefined) {\r\n\r\n      let response = {\r\n        code: error.status,\r\n        message: error.data.error\r\n      }\r\n\r\n      return response;\r\n    } else {\r\n\r\n      return null;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nconst register = async (newUser) => {\r\n\r\n  if (newUser === null) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n\r\n    const response = await axios.post(baseUrl + 'register', newUser);\r\n\r\n    let _response = {\r\n      code: response.status,\r\n      message: response.data.message\r\n    }\r\n\r\n    return _response;\r\n\r\n  } catch (exception) {\r\n\r\n    let error = exception.response;\r\n\r\n    let response = {\r\n      code: error.status,\r\n      message: error.data.error\r\n    }\r\n    return response;\r\n  }\r\n\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { login, register }","import axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\nlet baseUrl = \"/api/data/\";\r\nif (process.env.NODE_ENV === \"development\")\r\n  baseUrl = \"http://localhost:5000/api/data/\";\r\n\r\nconst getDataFromMongo = async (config) => {\r\n  const response = await axios.get(baseUrl + \"getactivities\", config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst updateDataToMongo = async (config) => {\r\n  const response = await axios.get(baseUrl + \"getstravaactivities\", config);\r\n  // palauttaa datan pituuden\r\n\r\n  return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getDataFromMongo, updateDataToMongo };\r\n","export default __webpack_public_path__ + \"static/media/logo.596a690d.svg\";","import React from \"react\";\r\nimport Logo from \"../img/logo.svg\";\r\n\r\nconst Homepage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ paddingLeft: \"10px\", paddingTop: \"10px\" }}>\r\n        <div style={{ color: \"white\", fontSize: \"30px\" }}>\r\n          Pyöräilyaktiviteettien data-analytiikka\r\n        </div>\r\n\r\n        <h6 style={{ color: \"#609CE1\",marginTop: \"8px\"}}>2022 ©AA4598</h6>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <img src={Logo} width=\"40%\" style={{ marginTop: \"50px\" }} alt=\"\"></img>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Pencil, Trash, XCircleFill, Search } from \"react-bootstrap-icons\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Row = ({ mode, item, func,_selectedIndex }) => {\r\n  const [typeOptions] = useState([\r\n    \"Moving time\",\r\n    \"Distance\",\r\n    \"Average speed\",\r\n    \"Average heartrate\",\r\n  ]);\r\n  const [id, setId] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [type, setType] = useState(typeOptions[0]);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    \r\n    if(_selectedIndex!==null && mode!==0){\r\n      setSelectedIndex(_selectedIndex);\r\n    }else{\r\n      setSelectedIndex(0);\r\n    }\r\n\r\n  }, [_selectedIndex, mode]);\r\n\r\n  const handleRow = (mode, id) => {\r\n    func(mode, id);\r\n  };\r\n\r\n  if (mode === 2) {\r\n    \r\n    \r\n    const getFormmatedDate = (dateString) => {\r\n      const date = new Date(dateString);\r\n      let month = (date.getMonth() + 1).toString();\r\n      let day = date.getDate().toString();\r\n      let year = date.getFullYear().toString();\r\n      if (month.length < 2) month = \"0\" + month;\r\n      if (day.length < 2) day = \"0\" + day;\r\n\r\n      return month + \"/\" + day + \"/\" + year;\r\n    };\r\n\r\n    let formattedDate = getFormmatedDate(item.start_date);\r\n\r\n    let values = [\r\n      formattedDate,\r\n      item.moving_time,\r\n      item.distance,\r\n      item.average_speed,\r\n      item.average_heartrate,\r\n    ];\r\n\r\n    let style = { background: \"#7AABFF\" };\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n        {values.map((item, ind) => {\r\n            return ind === (selectedIndex+1) ? (\r\n              <td key={ind} style={style}>\r\n                {item}\r\n              </td>\r\n            ) : (\r\n              <td key={ind}> {item} </td>\r\n            );\r\n          })}\r\n          <td style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              className=\"btn btn-success btn-sm\"\r\n              id={item._id}\r\n              onClick={(e) => {\r\n                handleRow(3, e.target.id);\r\n              }}\r\n            >\r\n              <Pencil id={item._id}></Pencil>\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-secondary btn-sm\"\r\n              style={{ marginLeft: \"5px\" }}\r\n              id={item._id}\r\n              onClick={(e) => {\r\n                handleRow(1, e.target.id);\r\n              }}\r\n            >\r\n              <Trash id={item._id}></Trash>\r\n            </Button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  } else {\r\n    console.log(\"MODE= \" + mode);\r\n\r\n    // parametri turha kun/jos köytetään tilamuuttujaa\r\n    const handleSearch = (event, _id) => {\r\n      if (startDate === \"\" || endDate === \"\") {\r\n        return;\r\n      } else {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        };\r\n\r\n        if (mode === 0) {\r\n\r\n          func(5, data,selectedIndex);\r\n        } else {\r\n          //func(6, data);\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <DatePicker\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dp\"\r\n              required\r\n              selected={startDate}\r\n              onChange={(startDate) => setStartDate(startDate)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <DatePicker\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dp2\"\r\n              required\r\n              selected={endDate}\r\n              onChange={(endDate) => setEndDate(endDate)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <Form.Control\r\n              as=\"select\"\r\n              id=\"type\"\r\n              custom\r\n              value={type}\r\n              onChange={({ target }) => {\r\n                setSelectedIndex(target.selectedIndex);\r\n                setType(target.value);\r\n              }}\r\n            >\r\n              {typeOptions.map((item, ind) => {\r\n                return (\r\n                  <option key={ind} value={item}>\r\n                    {\" \"}\r\n                    {item}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </td>\r\n\r\n          <td>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"float-right ml-5 btn btn-success\"\r\n              id={id}\r\n              onClick={(e) => {\r\n                handleSearch(e, e.target.id);\r\n              }}\r\n            >\r\n              <Search id={id}></Search>\r\n            </Button>\r\n          </td>\r\n          <td>\r\n            {/*<Button className=\"btn btn-secondary\" id={item._id} onClick={(e) => { handleRow(2, e.target.id) }}>\r\n              <XCircleFill id={item._id}></XCircleFill>\r\n            </Button>*/}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n};\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { Table, Form } from \"react-bootstrap\";\r\nimport \"./css/form.css\";\r\n\r\nconst DataForm = ({ mode, data, header, func}) => {\r\n\r\n  //setSelectedIndex={setSelectedIndex}\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n const thisFunc=(mode,data,selectedIndex)=>{\r\n   \r\n      func(mode,data);\r\n      setSelectedIndex(selectedIndex);\r\n } \r\n\r\n  const HeaderRow = ({ header }) => {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          {header.map((item, ind) => {\r\n            return <th key={ind} style={{background:\"#000000\",color:\"#00FFFF\"}}>{item}</th>;\r\n          })}\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      className=\"overflow-auto form\"\r\n      style={{\r\n        maxHeight: \"587px\",\r\n      }}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Table className=\"table table-sm table-primary\" responsive=\"sm\">\r\n        {data.length > 0 && <HeaderRow header={header} />}\r\n        {data.length > 0 &&\r\n          data.map((item) => {\r\n            return (\r\n              <Row key={item.ride_id} mode={mode} item={item} func={thisFunc} _selectedIndex={selectedIndex} />\r\n            );\r\n          })}\r\n      </Table>\r\n    </Form>\r\n  );\r\n};\r\nexport default DataForm;\r\n","import React from 'react'\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst ToastMsg = ({ show, close, params }) => {\r\n\r\n  const style = {\r\n\r\n    backgroundColor: params.style.backgroundcolor,\r\n    color: params.style.color,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n\r\n  }\r\n\r\n  const headerStyle = {\r\n    backgroundColor: 'black',\r\n    color: 'white'\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      { params.autohide &&\r\n        <Toast style={style} onClose={() => close()} show={show} delay={params.delay} autohide>\r\n\r\n          <Toast.Header style={headerStyle}>\r\n            <strong className=\"mr-auto\">{params.header}</strong>\r\n\r\n          </Toast.Header>\r\n          <Toast.Body>{params.message}</Toast.Body>\r\n        </Toast>\r\n      }\r\n      {\r\n        !params.autohide &&\r\n        <Toast style={style} onClose={() => close()} show={show}>\r\n\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">{params.header}</strong>\r\n\r\n          </Toast.Header>\r\n          <Toast.Body>{params.message}</Toast.Body>\r\n        </Toast>\r\n      }\r\n    </div >\r\n\r\n  );\r\n\r\n}\r\nexport default ToastMsg;","import React, { useState, useEffect } from \"react\";\r\nimport { DataFrame, toDateTime } from \"danfojs\";\r\n\r\nconst YearsGraph = ({ df, _years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [val, setVal] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n  let condition;\r\n  let tmp;\r\n\r\n  let _val = [];\r\n\r\n  _years.forEach((item) => {\r\n    let sub_df = df.loc({\r\n      columns: [\"distance\", \"start_date\"],\r\n    });\r\n\r\n    condition = toDateTime(sub_df[\"start_date\"]).year().eq(item);\r\n    sub_df = sub_df.loc({ rows: condition });\r\n\r\n    tmp = sub_df[\"distance\"].sum();\r\n    tmp = Math.round(tmp / 1000);\r\n    _val.push(tmp);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setYears(_years);\r\n    setVal(_val);\r\n  }, []);\r\n\r\n  // _val, _years\r\n\r\n  const gDf = new DataFrame({ ride: val }, { index: years });\r\n  let layout;\r\n  let config;\r\n\r\n  if (mode === \"bar\") {\r\n    layout = {\r\n      width: 1000,\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n      yaxis: {\r\n        title: \"km\",\r\n        color: \"#00FF00\",\r\n      },\r\n      xaxis: {\r\n        title: \"Year\",\r\n        color: \"#00FF00\",\r\n      },\r\n    };\r\n\r\n    config = {\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").bar({ layout, config });\r\n  } else {\r\n    layout = {\r\n      title: {\r\n        text: \"\",\r\n        x: 0,\r\n      },\r\n      width: 1000,\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n\r\n      \r\n\r\n      yaxis: {\r\n        title: \"km\",\r\n        color: \"#00FF00\",\r\n      },\r\n      xaxis: {\r\n        title: \"Year\",\r\n        color: \"#00FF00\",\r\n      },\r\n    };\r\n\r\n    config = {\r\n      columns: [\"ride\"], //columns to plot\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").line({ layout, config });\r\n  }\r\n\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"plot_div\" />\r\n      <select\r\n        className=\"float-right mr-5 btn btn-success\"\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\nexport default YearsGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DataFrame, toDateTime } from \"danfojs\";\r\n\r\nconst MonthsGraph = ({ df, _years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [year, setYear] = useState(_years[0]);\r\n  const [val, setVal] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const start = 1;\r\n  const end = 12;\r\n  const [months, setMonths] = useState(\r\n    [...Array(end - start + 1).keys()].map((x) => x + start)\r\n  );\r\n\r\n  /*useEffect(() => {\r\n    setYear(_years[0]);    \r\n  }, []);*/\r\n\r\n  let sub_df = df.loc({\r\n    columns: [\"distance\", \"start_date\"],\r\n  });\r\n\r\n  let _year = parseInt(year);\r\n\r\n  let condition = toDateTime(sub_df[\"start_date\"]).year().eq(_year);\r\n\r\n  sub_df = sub_df.loc({ rows: condition });\r\n\r\n  let _val = [];\r\n\r\n  for (let month = 0; month < 12; month++) {\r\n    condition = toDateTime(sub_df[\"start_date\"]).month().eq(month);\r\n    let sub_dfx = sub_df.loc({ rows: condition });\r\n\r\n    let sum = sub_dfx[\"distance\"].sum();\r\n\r\n    sum = Math.round(sum / 1000);\r\n\r\n    _val.push(sum);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setYears(_years);\r\n    //setVal(_val);\r\n  }, []);\r\n\r\n  if (mode === \"line\") {\r\n    const gDf = new DataFrame({ ride: _val }, { index: months });\r\n\r\n    const layout = {\r\n      title: {\r\n        text: \"\",\r\n        x: 0,\r\n      },\r\n\r\n      width: 1000,\r\n      yaxis: {\r\n        title: \"km\",\r\n        color: \"#FFA500\",\r\n      },\r\n      xaxis: {\r\n        title: \"Month\",\r\n        color: \"#FFA500\",\r\n      },\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n    };\r\n\r\n    const config = {\r\n      columns: [\"ride\"], //columns to plot\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").line({ layout, config });\r\n  } else {\r\n    const gDf = new DataFrame({ ride: _val }, { index: months });\r\n\r\n    const layout = {\r\n      width: 1000,\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n\r\n      yaxis: {\r\n        title: \"km\",\r\n        color: \"#FFA500\",\r\n      },\r\n      xaxis: {\r\n        title: \"Month\",\r\n        color: \"#FFA500\",\r\n      },\r\n    };\r\n\r\n    const config = {\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").bar({ layout, config });\r\n  }\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"plot_div\" />\r\n      <select\r\n        className=\"float-right mr-5 btn btn-success\"\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <select\r\n        className=\"float-right mr-1 btn btn-info\"        \r\n        value={year}\r\n        onChange={({ target }) => {\r\n          setYear(target.value);\r\n        }}\r\n      >\r\n        {years.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthsGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DataFrame, toDateTime } from \"danfojs\";\r\n\r\nconst MonthsSummaryGraph = ({ df, _years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [year, setYear] = useState(_years[0]);\r\n  const [val, setVal] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const start = 1;\r\n  const end = 12;\r\n  const [months, setMonths] = useState(\r\n    [...Array(end - start + 1).keys()].map((x) => x + start)\r\n  );\r\n\r\n  /*useEffect(() => {\r\n    setYear(_years[0]);    \r\n  }, []);*/\r\n\r\n  let summary=[];\r\n  let items={}; \r\n\r\n  //for (let i = 0; i < _years.length; i++) {\r\n  for (let i = 0; i < _years.length; i++) {\r\n    let sub_df = df.loc({\r\n      columns: [\"distance\", \"start_date\"],\r\n    });\r\n     \r\n\r\n    let _year = parseInt(_years[i]);\r\n\r\n    let condition = toDateTime(sub_df[\"start_date\"]).year().eq(_year);\r\n\r\n    sub_df = sub_df.loc({ rows: condition });\r\n\r\n    let _val = [];\r\n\r\n    for (let month = 0; month < 12; month++) {\r\n      condition = toDateTime(sub_df[\"start_date\"]).month().eq(month);\r\n      let sub_dfx = sub_df.loc({ rows: condition });\r\n\r\n      let sum = sub_dfx[\"distance\"].sum();\r\n\r\n      sum = Math.round(sum / 1000);\r\n\r\n      _val.push(sum);\r\n    }\r\n    //summary.push(_val);\r\n    items[_years[i]]=_val;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setYears(_years);\r\n    //setVal(_val);\r\n  }, []);\r\n\r\n\r\n  if (mode === \"line\") {\r\n    //const gDf = new DataFrame({ ride: _val }, { index: months });\r\n    const gDf = new DataFrame(items, { index: months });\r\n\r\n    const layout = {\r\n      title: {\r\n        text: \"\",\r\n        x: 0,\r\n      },\r\n      legend: {\r\n        bgcolor: \"133863\",        \r\n        font: { family: \"Arial\", size: 12,color: \"#14a2b8\"},\r\n      },\r\n      width: 1000,\r\n      yaxis: {\r\n        title: \"km\",\r\n        color: \"#14a2b8\",\r\n      },\r\n      xaxis: {\r\n        title: \"Month\",\r\n        color: \"#14a2b8\",\r\n      },\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n    };\r\n\r\n    const config = {\r\n      //columns: [\"ride\"], //columns to plot\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").line({ layout, config });\r\n  } else {\r\n    //const gDf = new DataFrame({ ride: _val }, { index: months });\r\n    const gDf = new DataFrame(items, { index: months });\r\n\r\n    const layout = {\r\n      width: 1000,\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n\r\n      legend: {\r\n        bgcolor: \"133863\",        \r\n        font: { family: \"Arial\", size: 12, color: \"#14a2b8\" },\r\n      },\r\n\r\n      yaxis: {\r\n        title: \"km\",\r\n        color: \"#FFA500\",\r\n      },\r\n      xaxis: {\r\n        title: \"Month\",\r\n        color: \"#FFA500\",\r\n      },\r\n    };\r\n\r\n    const config = {\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").bar({ layout, config });\r\n  }\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"plot_div\" />\r\n      <select\r\n        className=\"float-right mr-5 btn btn-success\"\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthsSummaryGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DataFrame, toDateTime, Series } from \"danfojs\";\r\nimport DataForm from \"../components/DataForm\";\r\n\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { Navbar, NavItem } from \"react-bootstrap\";\r\n\r\nimport ToastMsg from \"../components/ToastMsg\";\r\nimport YearsGraph from \"../components/YearsGraph\";\r\nimport MonthsGraph from \"../components/MonthsGraph\";\r\nimport MonthsSummaryGraph from \"../components/MonthsSummaryGraph\";\r\n\r\nimport Logo from \"../img/logo.svg\";\r\n\r\nconst MyActivities = ({ callBack, user }) => {\r\n  const [df, setDf] = useState();\r\n  const [years, setYears] = useState();\r\n\r\n  const [mode, setMode] = useState(2); // oletus että kaikki näytetään\r\n  //const [myData, setMyData] = useState([]);\r\n  const [myDataToShow, setMyDataToShow] = useState([]);\r\n\r\n  const [showMode, setShowMode] = useState(0); // oletus että kaikki näytetään\r\n//  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    header: \"\",\r\n    message: \"\",\r\n    autohide: false,\r\n    delay: 0,\r\n    style: {\r\n      backgroundcolor: \"#00FF00\",\r\n      color: \"blue\",\r\n    },\r\n  });\r\n\r\n  //***************************************************************\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await callBack(\"getActivitiesData\");\r\n      const df = new DataFrame(data);\r\n      console.log(df);\r\n      setYears(await getYears(df));\r\n      setDf(df);\r\n    };\r\n    getData();\r\n  }, [callBack]);\r\n\r\n  const getYears = async (df) => {\r\n    let sub_df = df.loc({\r\n      columns: [\"start_date\"],\r\n    });\r\n    sub_df[\"start_date\"] = toDateTime(sub_df[\"start_date\"]).year();\r\n\r\n    sub_df = sub_df.loc({ columns: [\"start_date\"] });\r\n    let sf = new Series(sub_df[\"start_date\"].values);\r\n    return sf.unique().values;\r\n  };\r\n\r\n  const showTheToast = (header, message, delay, backgroundcolor, color) => {\r\n    setMessage({\r\n      header: header,\r\n      message: message,\r\n      autohide: true,\r\n      delay: delay,\r\n      closeParent: false,\r\n      style: {\r\n        backgroundcolor: backgroundcolor,\r\n        color: color,\r\n      },\r\n    });\r\n\r\n    setShowToast(true);\r\n  };\r\n\r\n  const handleForm = async (_mode, id,selectedIndex) => {\r\n    if (_mode === 0) {\r\n      let data = [];\r\n      //setSelectedIndex(selectedIndex); \r\n      setMyDataToShow([data]);\r\n      setMode(_mode);\r\n    } else if (_mode === 5) {\r\n      // id-muuttujassa tulee myös data vois toki olla 2 eri muuttujaa\r\n      let data = id;\r\n\r\n      doQuery(data);\r\n    }\r\n  };\r\n\r\n  const action = () => {\r\n    //getAll();\r\n  };\r\n\r\n  const doQuery = async (data) => {\r\n    let startDate = data.startDate;\r\n    let endDate = data.endDate;\r\n\r\n    startDate = new Date(startDate.setUTCHours(0, 0, 0, 0));\r\n    endDate = new Date(endDate.setUTCHours(23, 59, 0, 0));\r\n\r\n    startDate = startDate.toISOString();\r\n    endDate = endDate.toISOString();\r\n\r\n    let sub_df = df.loc({\r\n      columns: [\r\n        \"ride_id\",\r\n        \"start_date\",\r\n        \"moving_time\",\r\n        \"distance\",\r\n        \"average_speed\",\r\n        \"average_heartrate\",\r\n      ],\r\n    });\r\n\r\n    let result = [];\r\n    for (let i = 0; i < sub_df.index.length; i++) {\r\n      let date = sub_df.at(i, \"start_date\");\r\n\r\n      if (date >= startDate && date <= endDate) {\r\n        console.log(date);\r\n        let val = sub_df.iloc({ rows: [i] }).toJSON();\r\n        console.log(\"----------------------------------\");\r\n        val[0].distance = val[0].distance / 1000;\r\n        val[0].average_speed = (\r\n          (val[0].distance / val[0].moving_time) *\r\n          3600\r\n        ).toFixed(2);\r\n\r\n        result.push(val[0]);\r\n      }\r\n    }\r\n\r\n    setMyDataToShow(result);\r\n    setMode(2);\r\n  };\r\n\r\n  let header = [\"Start\", \"End\", \"Topic\"];\r\n  if (mode === 2) {\r\n    // nämää pitäis kai saada jostakin luettua, onko josnin kentät minkä nimisiä\r\n    header = [\r\n      \"Date\",\r\n      \"Moving time (s)\",\r\n      \"Distance (km)\",\r\n      \"Avg speed (km/h)\",\r\n      \"Avg hr (bpm)\",\r\n    ];\r\n  }\r\n  //{ background: \"#091834\" }\r\n  return (\r\n    <Container>\r\n      <Navbar style={{ background: \"#000000\" }} variant=\"dark\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <NavItem className=\"ml-auto\">\r\n          <Button\r\n            variant=\"outline-success\"\r\n            onClick={() => {\r\n              setShowMode(1);\r\n            }}\r\n          >\r\n            Years\r\n          </Button>\r\n        </NavItem>\r\n        <NavItem className=\"ml-2\">\r\n          <Button\r\n            variant=\"outline-warning\"\r\n            onClick={() => {\r\n              setShowMode(2);\r\n            }}\r\n          >\r\n            Months\r\n          </Button>\r\n        </NavItem>\r\n\r\n        <NavItem className=\"ml-2\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            onClick={() => {\r\n              setShowMode(4);\r\n            }}\r\n          >\r\n            Summary\r\n          </Button>\r\n        </NavItem>\r\n\r\n        <NavItem>\r\n          <Button\r\n            className=\"ml-2\"\r\n            variant=\"outline-primary\"\r\n            onClick={() => {\r\n              handleForm(0, null);\r\n              setShowMode(3);\r\n            }}\r\n          >\r\n            Query\r\n          </Button>\r\n        </NavItem>\r\n      </Navbar>\r\n\r\n      <Row>\r\n        <Col>\r\n          <h2> </h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      {showMode === 0 && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <img src={Logo} width=\"50%\" style={{ marginTop: \"50px\" }} alt=\"\" />\r\n        </div>\r\n      )}\r\n      {showMode === 1 && <YearsGraph df={df} _years={years} />}\r\n      {showMode === 2 && <MonthsGraph df={df} _years={years} />}\r\n      {showMode === 4 && <MonthsSummaryGraph df={df} _years={years} />}\r\n\r\n      {/*{showMode !== 3 && */}\r\n\r\n      {showMode === 3 && (\r\n        <DataForm\r\n          mode={mode}\r\n          data={myDataToShow}\r\n          header={header}\r\n          func={handleForm}          \r\n        />\r\n      )}\r\n\r\n      <div id=\"plot_div\" style={{ display: \"none\" }} />\r\n      <ToastMsg\r\n        show={showToast}\r\n        close={() => {\r\n          setShowToast(false);\r\n          action();\r\n        }}\r\n        params={message}\r\n      ></ToastMsg>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyActivities;\r\n","import React from 'react';\r\nimport { Modal,Spinner,Button} from 'react-bootstrap';\r\n\r\n\r\nconst OnProgressModal = ({ show,message}) => {\r\n    return (\r\n      <Modal show={show} size=\"sm\" backdrop=\"static\" keyboard={false} centered>\r\n        <Button variant=\"primary\" disabled>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"grow\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <span>&nbsp;&nbsp;&nbsp;</span>\r\n          {message}\r\n        </Button>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  export default OnProgressModal","import React, { useState, useEffect } from \"react\";\r\n//import React from \"react\";\r\nimport { Route, Navigate, Link, Routes, useLocation } from \"react-router-dom\";\r\nimport { Navbar, NavItem, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HouseDoor } from \"react-bootstrap-icons\";\r\n\r\nimport Homepage from \"../routes/Homepage\";\r\nimport MyActivities from \"../routes/MyActivities\";\r\nimport OnProgressModal from \"../components/OnProgressModal\";\r\n\r\nconst Navigation = ({ user, admin, callBack,progress }) => {\r\n  \r\n  const [progressShow, setProgressShow] = useState(false);\r\n\r\n  let location = useLocation();\r\n  let path = location.pathname;\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n  \r\n    setProgressShow(progress);\r\n  }, [progress]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <OnProgressModal show={progressShow} message={\"Loading...\"} />\r\n      <Navbar style={{ background: \"#091834\" }} variant=\"light\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Link to=\"/\" className=\"mr-auto\">\r\n          <NavItem>\r\n            <Button variant=\"success\">\r\n              <HouseDoor color=\"white\" size={22} />\r\n            </Button>\r\n          </NavItem>\r\n        </Link>\r\n        {user && (\r\n          <>\r\n            {(path === \"/\") && (\r\n              <Link to=\"/MyActivities\" className=\"ml-auto\">\r\n                <NavItem>\r\n                  <Button variant=\"outline-warning\">Activities</Button>\r\n                </NavItem>\r\n              </Link>\r\n            )}\r\n\r\n            {(admin && (path === \"/\")) && (\r\n              <NavItem className=\"ml-auto\">\r\n                <Button\r\n                  variant=\"outline-danger\"\r\n                  onClick={() => {\r\n                    callBack(\"updateDb\");\r\n                  }}\r\n                >\r\n                  Update Db\r\n                </Button>\r\n              </NavItem>\r\n            )}\r\n\r\n            <div\r\n              className=\"ml-auto\"\r\n              style={{ paddingRight: \"15px\", color: \"darkcyan\" }}\r\n            >\r\n              {\"Logged in: \" + user}\r\n            </div>\r\n            <Link to={\"/\"}>\r\n              <NavItem>\r\n                <Button\r\n                  variant=\"dark\"\r\n                  onClick={() => {\r\n                    callBack(\"logout\");\r\n                  }}\r\n                >\r\n                  Log out\r\n                </Button>\r\n              </NavItem>\r\n            </Link>\r\n          </>\r\n        )}\r\n\r\n        {!user && (\r\n          <NavItem className=\"ml-auto\">\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={() => {\r\n                callBack(\"login\");\r\n              }}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </NavItem>\r\n        )}\r\n      </Navbar>\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<Homepage />} />\r\n\r\n        <Route\r\n          path=\"/MyActivities\"\r\n          element={\r\n            user ? (\r\n              <MyActivities callBack={callBack} user={user} />\r\n            ) : (\r\n              <Navigate to=\"/\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\nimport ToastMsg from './ToastMsg';\r\n\r\nconst RegisterForm = ({ show, close, func }) => {\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [surName, setSurName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [admin, setAdmin] = useState(false)\r\n\r\n    const [showToast, setShowToast] = useState(false)\r\n\r\n    const [message, setMessage] = useState({\r\n        header: '',\r\n        message: '',\r\n        autohide: true,\r\n        delay: 0,\r\n        style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n        }\r\n    });\r\n\r\n\r\n    const handleRegin = async (p) => {\r\n\r\n        if (p) {\r\n\r\n            //alert(firstName);\r\n            let regData = {\r\n                \"firstname\": firstName,\r\n                \"lastname\": surName,\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"admin\": admin\r\n            }\r\n\r\n            const data = await func(2, regData);\r\n\r\n            if (data.code !== 200) {\r\n\r\n                setMessage({\r\n                    header: 'Error',\r\n                    message: data.message,\r\n                    closeParent: false,\r\n                    autohide: true,\r\n                    style: {\r\n\r\n                        backgroundcolor: '#00FF00',\r\n                        color: 'blue'\r\n\r\n                    },\r\n                });\r\n\r\n            } else if (data.code === 200) {\r\n\r\n                setMessage({\r\n                    header: 'Sign up success',\r\n                    message: data.message,\r\n                    closeParent: true,\r\n                    autohide: true,\r\n                    style: {\r\n\r\n                        backgroundcolor: '#00FF00',\r\n                        color: 'blue'\r\n\r\n                    },\r\n                });\r\n\r\n            }\r\n\r\n            clearFields();\r\n            setShowToast(true);\r\n\r\n        }\r\n    }\r\n\r\n    const clearFields = () => {\r\n        setFirstName('');\r\n        setSurName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setAdmin(false);\r\n    }\r\n\r\n    if (show) {\r\n\r\n        return (\r\n            <>\r\n                <Form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    handleRegin(true);\r\n                }}>\r\n                    <Modal.Body>\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>Firstname</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Etunimi\" value={firstName} onChange={({ target }) => setFirstName(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Surname</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Sukunimi\" value={surName} onChange={({ target }) => setSurName(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"email\" value={email} onChange={({ target }) => setEmail(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Salasana\" value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Admin\" onChange={( e ) => {                                \r\n                                setAdmin(e.target.checked)}} />\r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => { close(false) }}>\r\n                            Close\r\n                        </Button>\r\n                        <Button type='Submit' variant=\"primary\">\r\n                            Ready\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n\r\n                <ToastMsg show={showToast} close={() => { setShowToast(false); if (message.closeParent) close(false) }} params={message}></ToastMsg>\r\n            </>\r\n        )\r\n    } else {\r\n\r\n        return null\r\n    }\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Button, Modal, Form\r\n} from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ToastMsg from './ToastMsg';\r\nimport RegisterForm from './RegisterForm';\r\n\r\n\r\nconst LoginDialog = ({ _show, showDialog, func }) => {\r\n\r\n  let _labels = {\r\n    title: 'Log in',\r\n    btnClose: 'Close'\r\n  }\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [labels, setLabels] = useState(_labels);\r\n\r\n  const [showToast, setShowToast] = useState(false)\r\n\r\n  const handleClose = () => { };\r\n\r\n  const [message, setMessage] = useState({\r\n    header: '',\r\n    message: '',\r\n    autohide: false,\r\n    delay: 0,\r\n    style: {\r\n\r\n      backgroundcolor: '#00FF00',\r\n      color: 'blue'\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setLabels(labels);\r\n    setShow(_show);\r\n    if (!_show) {\r\n      setShowRegister(false);\r\n    }\r\n  }, [_show, labels])\r\n\r\n\r\n  const showRegisterForm = (p) => {\r\n\r\n    regLabels();\r\n    setShowRegister(p);\r\n\r\n  }\r\n\r\n  const regLabels = () => {\r\n\r\n    let _labels = {\r\n      title: 'Sign up',\r\n      btnClose: 'Close'\r\n    }\r\n    setLabels(_labels);\r\n  }\r\n\r\n  const logLabels = () => {\r\n\r\n    let _labels = {\r\n      title: 'Login',\r\n      btnClose: 'Close'\r\n    }\r\n    setLabels(_labels);\r\n  }\r\n\r\n\r\n  const handleLogin = async (p) => {\r\n\r\n    if (p) {\r\n\r\n      let auth = {\r\n        \"email\": email,\r\n        \"password\": password\r\n      }\r\n\r\n      let data = await func(1, auth);\r\n\r\n      if (data === null || data.code === 404 || data.code === 401) {\r\n\r\n        let message = null;\r\n        let closeParent = false;\r\n\r\n        if (data === null) {\r\n\r\n          closeParent = true;\r\n          message = \"No connection to backend\";\r\n        } else {\r\n\r\n          message = data.message;\r\n\r\n        }\r\n\r\n        setMessage({\r\n          header: 'Error',\r\n          message: message,\r\n          autohide: true,\r\n          delay: 2000,\r\n          closeParent: closeParent,\r\n          style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n\r\n          },\r\n        });\r\n\r\n        setShowToast(true);\r\n      } else if (data.code === 200) {\r\n\r\n        setMessage({\r\n          header: 'Login succesfull',\r\n          message: 'Welcome ;)',\r\n          autohide: true,\r\n          delay: 2000,\r\n          closeParent: true,\r\n          style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n\r\n          },\r\n        });\r\n\r\n        setShowToast(true);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      showDialog(false);\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton onClick={() => { handleLogin(false) }}>\r\n          <Modal.Title>{labels.title}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        {!showRegister &&\r\n          <>\r\n            <Form onSubmit={(event) => {\r\n              event.preventDefault()\r\n              handleLogin(true)\r\n            }}>\r\n\r\n              <Modal.Body>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email</Form.Label>\r\n\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={({ target }) => setEmail(target.value)} required />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                </Form.Group>\r\n\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <>\r\n                  <Button variant=\"warning\" className='mr-auto' onClick={() => { showRegisterForm(true) }}>\r\n                    New user\r\n                  </Button>\r\n                  <Button variant=\"secondary\" onClick={() => { handleLogin(false) }}>\r\n                    {labels.btnClose}\r\n                  </Button>\r\n                  <Button type='submit' variant=\"primary\">\r\n                    Log in\r\n                  </Button>\r\n                </>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </>\r\n\r\n        }\r\n        <RegisterForm show={showRegister} close={() => {\r\n          logLabels(); setShowRegister(false);\r\n        }} func={func} />\r\n        <ToastMsg show={showToast} close={() => { setShowToast(false); if (message.closeParent) showDialog(false) }} params={message}></ToastMsg>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default LoginDialog\r\n","import React from 'react';\r\nimport { Modal,Button} from 'react-bootstrap';\r\n\r\n\r\nconst ConfirmModal = ({ show, onHide, updateDb }) => {\r\n  \r\n  const handleAccept = () => {\r\n    onHide(false);\r\n    updateDb(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"  \r\n      backdrop=\"static\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Update the database\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5>Are you sure?</h5>\r\n        <p></p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onHide}>\r\n          No\r\n        </Button>\r\n\r\n        <Button variant=\"primary\" onClick={handleAccept}>\r\n          Yes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport userService from \"./services/user-service\";\r\nimport dataService from \"./services/data-service\";\r\n\r\nimport Navigation from \"./nav/Navigation\";\r\nimport LoginDialog from \"./components/LoginDialog\";\r\nimport ConfirmModal from \"./components/ConfirmModal\";\r\n//import OnProgressModal from \"./components/OnProgressModal\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [mongoData, setMongoData] = useState();\r\n  const [user, setUser] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  const [login, setLogin] = useState(false);\r\n  const [progressShow, setProgressShow] = useState(false);\r\n  const [confirmShow, setConfirmShow] = useState(false);\r\n  \r\n  \r\n  let navigate = useNavigate();\r\n\r\n  const getConfig = () => {\r\n    let _token = `bearer ${token}`;\r\n    const config = {\r\n      headers: { Authorization: _token },\r\n    };\r\n\r\n    return config;\r\n  };\r\n\r\n  const updateDataToMongo = async () => {\r\n    await dataService.updateDataToMongo(getConfig());\r\n  };\r\n\r\n  useEffect(() => {\r\n    let baseUrl = \"/\";\r\n    if (process.env.NODE_ENV === \"development\")\r\n      baseUrl = \"http://localhost:5000\";\r\n\r\n    const socket = socketIOClient(baseUrl);\r\n\r\n    socket.on(\"onProgress\", (p) => {\r\n      console.log(\"message from backend onProgress \" + p);\r\n      \r\n      setProgressShow(p);\r\n    });\r\n\r\n    socket.on(\"connect\", (data) => {\r\n      console.log(\"socket connected\");\r\n    });\r\n\r\n    socket.on(\"connected\", (p) => {\r\n      console.log(\"message from backend connected\" + p);\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // tänne kaikki cleaning-jutut\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let mongoData = await dataService.getDataFromMongo(getConfig());\r\n\r\n      setMongoData(mongoData);\r\n      try {\r\n        navigate(\"/MyActivities\");\r\n      } catch (exception) {\r\n        alert(exception.message);\r\n      }\r\n    };\r\n\r\n    if (user !== \"\") {\r\n      getData();\r\n    }\r\n  }, [token]);\r\n\r\n  const handleRegister = async (user) => {\r\n    const data = await userService.register(user);\r\n\r\n    return data;\r\n  };\r\n\r\n  const handleLogin = async (id, data, func) => {\r\n    if (id === 1) {\r\n      if (data !== null) {\r\n        const response = await userService.login(data);\r\n\r\n        if (response !== null) {\r\n          if (response.code === 200) {\r\n            setUser(response.data.email);\r\n            setUserName(response.data.firstname);\r\n            setAdmin(response.data.admin);\r\n            setToken(response.data.token);\r\n          }\r\n          return response;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (id === 2) {\r\n      return await handleRegister(data);\r\n    }\r\n  };\r\n\r\n  const callBack = async (topic, data) => {\r\n    if (topic === \"getActivitiesData\") {\r\n      return mongoData;\r\n    } else if (topic === \"updateDb\") {\r\n      updateDb();\r\n    } else if (topic === \"login\") {\r\n      setLogin(true);\r\n    } else if (topic === \"logout\") {\r\n      setUserName(\"\");\r\n    }\r\n  };\r\n\r\n  const updateDb = () => {\r\n    setConfirmShow(true);\r\n  };\r\n\r\n  const updateDatabase = async (p) => {\r\n    if (p === true) {\r\n      await updateDataToMongo();\r\n    }\r\n  };\r\n\r\n  const style = { backgroundColor: \"#353b45\" };\r\n\r\n  return (\r\n    <Container fluid className=\"App\">\r\n      <div style={style}>        \r\n        <LoginDialog\r\n          _show={login}\r\n          showDialog={setLogin}\r\n          func={handleLogin}\r\n        ></LoginDialog>\r\n\r\n        <ConfirmModal\r\n          show={confirmShow}\r\n          onHide={() => setConfirmShow(false)}\r\n          updateDb={updateDatabase}\r\n        />\r\n        {/*<OnProgressModal show={progressShow} message={\"Loading...\"} />*/}\r\n      </div>\r\n\r\n      <Navigation user={userName} admin={admin} callBack={callBack} progress={progressShow} />\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport './index.css';\r\nimport App from './App';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router><App /></Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}