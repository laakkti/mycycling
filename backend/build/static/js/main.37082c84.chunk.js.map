{"version":3,"sources":["services/user-service.js","services/data-service.js","img/logo.svg","routes/Homepage.js","components/Row.js","components/DataForm.js","components/ToastMsg.js","components/YearsGraph.js","components/MonthsGraph.js","components/MonthsSummaryGraph.js","routes/MyActivities.js","components/OnProgressModal.js","nav/Navigation.js","components/RegisterForm.js","components/LoginDialog.js","components/ConfirmModal.js","App.js","index.js"],"names":["require","config","baseUrl","console","log","login","user","a","axios","post","_response","response","code","status","data","undefined","error","message","register","newUser","getDataFromMongo","get","updateDataToMongo","Homepage","style","paddingLeft","paddingTop","color","fontSize","marginTop","display","alignItems","justifyContent","src","Logo","width","alt","Row","mode","item","func","_selectedIndex","useState","typeOptions","id","Date","startDate","setStartDate","endDate","setEndDate","type","setType","selectedIndex","setSelectedIndex","useEffect","values","dateString","date","month","getMonth","toString","day","getDate","year","getFullYear","length","getFormmatedDate","start_date","moving_time","distance","average_speed","average_heartrate","background","map","ind","textAlign","className","required","selected","onChange","Form","Control","as","custom","value","target","Button","onClick","e","event","preventDefault","DataForm","header","thisFunc","HeaderRow","maxHeight","autoComplete","Table","responsive","ride_id","ToastMsg","show","close","params","backgroundColor","backgroundcolor","position","top","left","transform","autohide","Toast","onClose","delay","Header","Body","YearsGraph","condition","tmp","df","_years","setMode","setVal","years","setYears","_val","forEach","sub_df","loc","columns","toDateTime","eq","rows","sum","Math","round","push","x","y","layout","plot_bgcolor","paper_bgcolor","xaxis","title","showline","zeroline","yaxis","legend","font","family","size","displayModeBar","useResizeHandler","height","index","MonthsGraph","setYear","Array","end","keys","months","_year","parseInt","MonthsSummaryGraph","items","i","name","MyActivities","callBack","setDf","topics","topic","setTopic","myDataToShow","setMyDataToShow","showMode","setShowMode","showToast","setShowToast","DataFrame","getYears","getData","sf","Series","unique","handleForm","_mode","doQuery","setUTCHours","toISOString","result","at","val","iloc","toJSON","toFixed","Container","Navbar","variant","Toggle","aria-controls","NavItem","borderStyle","Col","OnProgressModal","Modal","backdrop","keyboard","centered","disabled","Spinner","animation","role","aria-hidden","Navigation","admin","progress","progressShow","setProgressShow","path","useLocation","pathname","to","paddingRight","element","replace","RegisterForm","firstName","setFirstName","surName","setSurName","email","setEmail","password","setPassword","setAdmin","setMessage","handleRegin","p","regData","closeParent","clearFields","onSubmit","Group","Label","placeholder","controlId","Check","label","checked","Footer","LoginDialog","_show","showDialog","setShow","showRegister","setShowRegister","btnClose","labels","setLabels","regLabels","handleLogin","auth","onHide","closeButton","Title","ConfirmModal","updateDb","aria-labelledby","App","mongoData","setMongoData","setUser","userName","setUserName","token","setToken","setLogin","confirmShow","setConfirmShow","navigate","useNavigate","getConfig","headers","Authorization","dataService","socket","socketIOClient","on","disconnect","exception","alert","handleRegister","userService","firstname","updateDatabase","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37082c84.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nrequire('dotenv').config();\r\nlet baseUrl = '/api/user/';\r\nif (process.env.NODE_ENV === 'development')\r\n  baseUrl = 'http://localhost:5000/api/user/';\r\n\r\nconsole.log(baseUrl);\r\n\r\nconst login = async (user) => {\r\n\r\n  try {\r\n\r\n    const _response = await axios.post(baseUrl + 'login', user);\r\n\r\n    const response = {\r\n      code: _response.status,\r\n      data: _response.data\r\n    }\r\n\r\n    return response;\r\n\r\n  } catch (exception) {\r\n\r\n\r\n    let error = exception.response;\r\n\r\n    if (error !== undefined) {\r\n\r\n      let response = {\r\n        code: error.status,\r\n        message: error.data.error\r\n      }\r\n\r\n      return response;\r\n    } else {\r\n\r\n      return null;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nconst register = async (newUser) => {\r\n\r\n  if (newUser === null) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n\r\n    const response = await axios.post(baseUrl + 'register', newUser);\r\n\r\n    let _response = {\r\n      code: response.status,\r\n      message: response.data.message\r\n    }\r\n\r\n    return _response;\r\n\r\n  } catch (exception) {\r\n\r\n    let error = exception.response;\r\n\r\n    let response = {\r\n      code: error.status,\r\n      message: error.data.error\r\n    }\r\n    return response;\r\n  }\r\n\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { login, register }","import axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\nlet baseUrl = \"/api/data/\";\r\nif (process.env.NODE_ENV === \"development\")\r\n  baseUrl = \"http://localhost:5000/api/data/\";\r\n\r\nconst getDataFromMongo = async (config) => {\r\n  const response = await axios.get(baseUrl + \"getactivities\", config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst updateDataToMongo = async (config) => {\r\n  const response = await axios.get(baseUrl + \"getstravaactivities\", config);\r\n  // palauttaa datan pituuden\r\n\r\n  return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getDataFromMongo, updateDataToMongo };\r\n","export default __webpack_public_path__ + \"static/media/logo.596a690d.svg\";","import React from \"react\";\r\nimport Logo from \"../img/logo.svg\";\r\n\r\nconst Homepage = () => {\r\n\r\n  //voisiko toimia näin ???df.plot(\"plot_div\").line({ layout, config, {responsive: true} })\r\n  //layout={{ width: 1024, height: 768, title: \"A Fancy Plot\" }}\r\n  return (\r\n    <div>\r\n      <div style={{ paddingLeft: \"10px\", paddingTop: \"10px\" }}>\r\n        <div style={{ color: \"white\", fontSize: \"30px\" }}>\r\n          Pyöräilyaktiviteettien data-analytiikka\r\n        </div>\r\n        <h6 style={{ color: \"#609CE1\", marginTop: \"8px\" }}>2022 ©AA4598</h6>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <img src={Logo} width=\"40%\" style={{ marginTop: \"50px\" }} alt=\"\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Pencil, Trash, Search } from \"react-bootstrap-icons\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Row = ({ mode, item, func, _selectedIndex }) => {\r\n  const [typeOptions] = useState([\r\n    \"Moving time\",\r\n    \"Distance\",\r\n    \"Average speed\",\r\n    \"Average heartrate\",\r\n  ]);\r\n  const [id, setId] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [type, setType] = useState(typeOptions[0]);\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (_selectedIndex !== null && mode !== 0) {\r\n      setSelectedIndex(_selectedIndex);\r\n    } else {\r\n      setSelectedIndex(0);\r\n    }\r\n  }, [_selectedIndex, mode]);\r\n\r\n  const handleRow = (mode, id) => {\r\n    func(mode, id);\r\n  };\r\n\r\n  if (mode === 2) {\r\n    const getFormmatedDate = (dateString) => {\r\n      const date = new Date(dateString);\r\n      let month = (date.getMonth() + 1).toString();\r\n      let day = date.getDate().toString();\r\n      let year = date.getFullYear().toString();\r\n      if (month.length < 2) month = \"0\" + month;\r\n      if (day.length < 2) day = \"0\" + day;\r\n\r\n      return month + \"/\" + day + \"/\" + year;\r\n    };\r\n\r\n    let formattedDate = getFormmatedDate(item.start_date);\r\n\r\n    let values = [\r\n      formattedDate,\r\n      item.moving_time,\r\n      item.distance,\r\n      item.average_speed,\r\n      item.average_heartrate,\r\n    ];\r\n\r\n    let style = { background: \"#7AABFF\" };\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          {values.map((item, ind) => {\r\n            return ind === selectedIndex + 1 ? (\r\n              <td key={ind} style={style}>\r\n                {item}\r\n              </td>\r\n            ) : (\r\n              <td key={ind}> {item} </td>\r\n            );\r\n          })}\r\n          <td style={{ textAlign: \"right\" }}>\r\n            {/*<Button\r\n              className=\"btn btn-success btn-sm\"\r\n              id={item._id}\r\n              onClick={(e) => {\r\n                handleRow(3, e.target.id);\r\n              }}\r\n            >\r\n              <Pencil id={item._id}></Pencil>\r\n            </Button>\r\n            <Button\r\n              className=\"btn btn-secondary btn-sm\"\r\n              style={{ marginLeft: \"5px\" }}\r\n              id={item._id}\r\n              onClick={(e) => {\r\n                handleRow(1, e.target.id);\r\n              }}\r\n            >\r\n              <Trash id={item._id}></Trash>\r\n            </Button>*/}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  } else {\r\n    const handleSearch = (event, _id) => {\r\n      if (startDate === \"\" || endDate === \"\") {\r\n        return;\r\n      } else {\r\n        event.preventDefault();\r\n\r\n        const data = {\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n        };\r\n\r\n        if (mode === 0) {\r\n          func(5, data, selectedIndex);\r\n        } else {\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <DatePicker\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dp\"\r\n              required\r\n              selected={startDate}\r\n              onChange={(startDate) => setStartDate(startDate)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <DatePicker\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dp2\"\r\n              required\r\n              selected={endDate}\r\n              onChange={(endDate) => setEndDate(endDate)}\r\n            />\r\n          </td>\r\n          <td>\r\n            <Form.Control\r\n              as=\"select\"\r\n              id=\"type\"\r\n              custom\r\n              value={type}\r\n              onChange={({ target }) => {\r\n                setSelectedIndex(target.selectedIndex);\r\n                setType(target.value);\r\n              }}\r\n            >\r\n              {typeOptions.map((item, ind) => {\r\n                return (\r\n                  <option key={ind} value={item}>\r\n                    {item}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </td>\r\n\r\n          <td>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"float-right btn btn-success\"\r\n              id={id}\r\n              onClick={(e) => {\r\n                handleSearch(e, e.target.id);\r\n              }}\r\n            >\r\n              <Search id={id}></Search>\r\n            </Button>\r\n          </td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n};\r\nexport default Row;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Row from \"./Row\";\r\nimport { Table, Form } from \"react-bootstrap\";\r\nimport \"./css/form.css\";\r\n\r\nconst DataForm = ({ mode, data, header, func }) => {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const thisFunc = (mode, data, selectedIndex) => {\r\n    func(mode, data);\r\n    setSelectedIndex(selectedIndex);\r\n  };\r\n\r\n  const HeaderRow = ({ header }) => {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          {header.map((item, ind) => {\r\n            return (\r\n              <td key={ind} style={{ background: \"#091834\", color: \"#79abff\" }}>\r\n                {item}\r\n              </td>\r\n            );\r\n          })}\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      className=\"overflow-auto form\"\r\n      style={{\r\n        maxHeight: \"587px\",\r\n      }}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Table className=\"table table-sm table-primary\" responsive=\"sm\">\r\n        {data.length > 0 && <HeaderRow header={header} />}\r\n        {data.length > 0 &&\r\n          data.map((item) => {\r\n            return (\r\n              <Row\r\n                key={item.ride_id}\r\n                mode={mode}\r\n                item={item}\r\n                func={thisFunc}\r\n                _selectedIndex={selectedIndex}\r\n              />\r\n            );\r\n          })}\r\n      </Table>\r\n    </Form>\r\n  );\r\n};\r\nexport default DataForm;\r\n","import React from 'react'\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst ToastMsg = ({ show, close, params }) => {\r\n\r\n  const style = {\r\n\r\n    backgroundColor: params.style.backgroundcolor,\r\n    color: params.style.color,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n\r\n  }\r\n\r\n  const headerStyle = {\r\n    backgroundColor: 'black',\r\n    color: 'white'\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      { params.autohide &&\r\n        <Toast style={style} onClose={() => close()} show={show} delay={params.delay} autohide>\r\n\r\n          <Toast.Header style={headerStyle}>\r\n            <strong className=\"mr-auto\">{params.header}</strong>\r\n\r\n          </Toast.Header>\r\n          <Toast.Body>{params.message}</Toast.Body>\r\n        </Toast>\r\n      }\r\n      {\r\n        !params.autohide &&\r\n        <Toast style={style} onClose={() => close()} show={show}>\r\n\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">{params.header}</strong>\r\n\r\n          </Toast.Header>\r\n          <Toast.Body>{params.message}</Toast.Body>\r\n        </Toast>\r\n      }\r\n    </div >\r\n\r\n  );\r\n\r\n}\r\nexport default ToastMsg;","import React, { useState, useEffect } from \"react\";\r\nimport { toDateTime } from \"danfojs\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst YearsGraph = ({ df, _years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [val, setVal] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n\r\n  let condition;\r\n  let tmp;\r\n\r\n  let _val = [];\r\n\r\n  _years.forEach((item) => {\r\n    let sub_df = df.loc({\r\n      columns: [\"distance\", \"start_date\"],\r\n    });\r\n\r\n    condition = toDateTime(sub_df[\"start_date\"]).year().eq(item);\r\n    sub_df = sub_df.loc({ rows: condition });\r\n\r\n    tmp = sub_df[\"distance\"].sum();\r\n    tmp = Math.round(tmp / 1000);\r\n    _val.push(tmp);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setYears(_years);\r\n    setVal(_val);\r\n  }, []);\r\n\r\n  const modes = [\"bar\", \"line\"];\r\n  let data = [{ type: mode, x: years, y: _val }];\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"plot_div\" />\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          plot_bgcolor: \"#133863\",\r\n          paper_bgcolor: \"#133863\",\r\n          xaxis: {\r\n            title: \"Year\",\r\n            showline: true,\r\n            zeroline: false,\r\n            color: \"#00FFFF\",\r\n          },\r\n          yaxis: {\r\n            title: \"Km\",\r\n            showline: false,\r\n            zeroline: false,\r\n            color: \"#00FFFF\",\r\n          },\r\n          legend: {\r\n            font: { family: \"Arial\", size: 12, color: \"#14a2b8\" },\r\n          },\r\n        }}\r\n        config={{ displayModeBar: false }}\r\n        useResizeHandler={true}\r\n        style={{ width: \"90%\", height: \"90%\" }}\r\n      />\r\n\r\n      <Form.Control\r\n        className=\"float-right mr-5 btn\"\r\n        style={{ width: \"auto\" }}\r\n        as=\"select\"\r\n        id=\"type\"\r\n        custom\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </Form.Control>\r\n    </div>\r\n  );\r\n};\r\nexport default YearsGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { toDateTime } from \"danfojs\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst MonthsGraph = ({ df, _years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [year, setYear] = useState(_years[0]);\r\n  const [val, setVal] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const start = 1;\r\n  const end = 12;\r\n  const [months, setMonths] = useState(\r\n    [...Array(end - start + 1).keys()].map((x) => x + start)\r\n  );\r\n\r\n  /*useEffect(() => {\r\n    setYear(_years[0]);    \r\n  }, []);*/\r\n\r\n  let sub_df = df.loc({\r\n    columns: [\"distance\", \"start_date\"],\r\n  });\r\n\r\n  let _year = parseInt(year);\r\n\r\n  let condition = toDateTime(sub_df[\"start_date\"]).year().eq(_year);\r\n\r\n  sub_df = sub_df.loc({ rows: condition });\r\n\r\n  let _val = [];\r\n\r\n  for (let month = 0; month < 12; month++) {\r\n    condition = toDateTime(sub_df[\"start_date\"]).month().eq(month);\r\n    let sub_dfx = sub_df.loc({ rows: condition });\r\n\r\n    let sum = sub_dfx[\"distance\"].sum();\r\n\r\n    sum = Math.round(sum / 1000);\r\n\r\n    _val.push(sum);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setYears(_years);\r\n    //setVal(_val);\r\n  }, []);\r\n\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  let data = [{ type: mode, x: months, y: _val }];\r\n\r\n  return (\r\n    <div>\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          plot_bgcolor: \"#133863\",\r\n          paper_bgcolor: \"#133863\",\r\n          xaxis: {\r\n            title: \"Month\",\r\n            showline: true,\r\n            zeroline: false,\r\n            color: \"#00FFFF\",\r\n          },\r\n          yaxis: {\r\n            title: \"Km\",\r\n            showline: false,\r\n            zeroline: false,            \r\n            color: \"#00FFFF\",\r\n          },\r\n          legend: {\r\n            font: { family: \"Arial\", size: 12, color: \"#14a2b8\" },\r\n          },\r\n\r\n        }}\r\n        config={{ displayModeBar: false }}\r\n        useResizeHandler={true}\r\n        style={{ width: \"90%\", height: \"90%\" }}\r\n      />\r\n      \r\n      <Form.Control\r\n        className=\"float-right mr-5 btn\"\r\n        style={{ width: \"auto\" }}\r\n        as=\"select\"\r\n        id=\"type\"\r\n        custom\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </Form.Control>\r\n\r\n      <Form.Control\r\n        className=\"float-right mr-1 btn\"\r\n        style={{ width: \"auto\" }}\r\n        as=\"select\"\r\n        id=\"type\"\r\n        custom\r\n        value={year}\r\n        onChange={({ target }) => {\r\n          setYear(target.value);\r\n        }}\r\n      >\r\n        {years.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </Form.Control>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthsGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { toDateTime } from \"danfojs\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Plot from \"react-plotly.js\";\r\n\r\nconst MonthsSummaryGraph = ({ df, _years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [year, setYear] = useState(_years[0]);\r\n  const [val, setVal] = useState([]);\r\n  const [years, setYears] = useState([]);\r\n  const start = 1;\r\n  const end = 12;\r\n  const [months, setMonths] = useState(\r\n    [...Array(end - start + 1).keys()].map((x) => x + start)\r\n  );\r\n\r\n  /*useEffect(() => {\r\n    setYear(_years[0]);    \r\n  }, []);*/\r\n\r\n  let items = []; //{};\r\n\r\n  for (let i = 0; i < _years.length; i++) {\r\n    let sub_df = df.loc({\r\n      columns: [\"distance\", \"start_date\"],\r\n    });\r\n\r\n    let _year = parseInt(_years[i]);\r\n\r\n    let condition = toDateTime(sub_df[\"start_date\"]).year().eq(_year);\r\n\r\n    sub_df = sub_df.loc({ rows: condition });\r\n\r\n    let _val = [];\r\n\r\n    for (let month = 0; month < 12; month++) {\r\n      condition = toDateTime(sub_df[\"start_date\"]).month().eq(month);\r\n      let sub_dfx = sub_df.loc({ rows: condition });\r\n\r\n      let sum = sub_dfx[\"distance\"].sum();\r\n\r\n      sum = Math.round(sum / 1000);\r\n\r\n      _val.push(sum);\r\n    }\r\n\r\n    items[i] = _val;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setYears(_years);\r\n  }, []);\r\n\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  let data = [];\r\n\r\n  for (let i = 0; i < years.length; i++) {\r\n    data.push({ type: mode, name: years[i], x: months, y: items[i] });\r\n  }\r\n\r\n  //FFA500 oranssi\r\n  return (\r\n    <div>\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          plot_bgcolor: \"#133863\",\r\n          paper_bgcolor: \"#133863\",\r\n          xaxis: {\r\n            title: \"Month\",\r\n            showline: true,\r\n            zeroline: false,\r\n            color: \"#00FFFF\",\r\n          },\r\n          yaxis: {\r\n            title: \"Km\",\r\n            showline: false,\r\n            zeroline: false,\r\n            color: \"#00FFFF\",\r\n          },\r\n          legend: {\r\n            font: { family: \"Arial\", size: 12, color: \"#14a2b8\" },\r\n          },\r\n        }}\r\n        config={{ displayModeBar: false }}\r\n        useResizeHandler={true}\r\n        style={{ width: \"90%\", height: \"90%\" }}\r\n      />\r\n\r\n      <Form.Control\r\n        className=\"float-right mr-5 btn\"\r\n        style={{ width: \"auto\" }}\r\n        as=\"select\"\r\n        id=\"type\"\r\n        custom\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </Form.Control>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthsSummaryGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DataFrame, toDateTime, Series } from \"danfojs\";\r\nimport DataForm from \"../components/DataForm\";\r\n\r\nimport { Button, Container, Row, Col, Form } from \"react-bootstrap\";\r\n\r\nimport { Navbar, NavItem } from \"react-bootstrap\";\r\n\r\nimport ToastMsg from \"../components/ToastMsg\";\r\nimport YearsGraph from \"../components/YearsGraph\";\r\nimport MonthsGraph from \"../components/MonthsGraph\";\r\nimport MonthsSummaryGraph from \"../components/MonthsSummaryGraph\";\r\n\r\nimport Logo from \"../img/logo.svg\";\r\n\r\nconst MyActivities = ({ callBack, user }) => {\r\n  const [df, setDf] = useState();\r\n  const [years, setYears] = useState();\r\n\r\n  const [mode, setMode] = useState(2);\r\n  const [topics, setTopics] = useState([\"Distance\"]);\r\n  const [topic, setTopic] = useState([\"Distance\"]);\r\n\r\n  //const [myData, setMyData] = useState([]);\r\n  const [myDataToShow, setMyDataToShow] = useState([]);\r\n\r\n  const [showMode, setShowMode] = useState(0); // oletus että kaikki näytetään\r\n  //  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    header: \"\",\r\n    message: \"\",\r\n    autohide: false,\r\n    delay: 0,\r\n    style: {\r\n      backgroundcolor: \"#00FF00\",\r\n      color: \"blue\",\r\n    },\r\n  });\r\n\r\n  //***************************************************************\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await callBack(\"getActivitiesData\");\r\n      const df = new DataFrame(data);\r\n      console.log(df);\r\n      setYears(await getYears(df));\r\n      setDf(df);\r\n    };\r\n    getData();\r\n  }, [callBack]);\r\n\r\n  const getYears = async (df) => {\r\n    let sub_df = df.loc({\r\n      columns: [\"start_date\"],\r\n    });\r\n    sub_df[\"start_date\"] = toDateTime(sub_df[\"start_date\"]).year();\r\n\r\n    sub_df = sub_df.loc({ columns: [\"start_date\"] });\r\n    let sf = new Series(sub_df[\"start_date\"].values);\r\n    return sf.unique().values;\r\n  };\r\n\r\n  const showTheToast = (header, message, delay, backgroundcolor, color) => {\r\n    setMessage({\r\n      header: header,\r\n      message: message,\r\n      autohide: true,\r\n      delay: delay,\r\n      closeParent: false,\r\n      style: {\r\n        backgroundcolor: backgroundcolor,\r\n        color: color,\r\n      },\r\n    });\r\n\r\n    setShowToast(true);\r\n  };\r\n\r\n  const handleForm = async (_mode, id, selectedIndex) => {\r\n    if (_mode === 0) {\r\n      let data = [];\r\n      //setSelectedIndex(selectedIndex);\r\n      setMyDataToShow([data]);\r\n      setMode(_mode);\r\n    } else if (_mode === 5) {\r\n      // id-muuttujassa tulee myös data vois toki olla 2 eri muuttujaa\r\n      let data = id;\r\n\r\n      doQuery(data);\r\n    }\r\n  };\r\n\r\n  const doQuery = async (data) => {\r\n    let startDate = data.startDate;\r\n    let endDate = data.endDate;\r\n\r\n    startDate = new Date(startDate.setUTCHours(0, 0, 0, 0));\r\n    endDate = new Date(endDate.setUTCHours(23, 59, 0, 0));\r\n\r\n    startDate = startDate.toISOString();\r\n    endDate = endDate.toISOString();\r\n\r\n    let sub_df = df.loc({\r\n      columns: [\r\n        \"ride_id\",\r\n        \"start_date\",\r\n        \"moving_time\",\r\n        \"distance\",\r\n        \"average_speed\",\r\n        \"average_heartrate\",\r\n      ],\r\n    });\r\n\r\n    let result = [];\r\n    for (let i = 0; i < sub_df.index.length; i++) {\r\n      let date = sub_df.at(i, \"start_date\");\r\n\r\n      if (date >= startDate && date <= endDate) {\r\n        console.log(date);\r\n        let val = sub_df.iloc({ rows: [i] }).toJSON();\r\n        console.log(\"----------------------------------\");\r\n        val[0].distance = val[0].distance / 1000;\r\n        val[0].average_speed = (\r\n          (val[0].distance / val[0].moving_time) *\r\n          3600\r\n        ).toFixed(2);\r\n\r\n        result.push(val[0]);\r\n      }\r\n    }\r\n\r\n    setMyDataToShow(result);\r\n    setMode(2);\r\n  };\r\n\r\n  let header = [\"Start\", \"End\", \"Topic\", \" \", \"\"]; // tyhjä koska buttoineille on oma sarakeensa data-riveillä\r\n  if (mode === 2) {\r\n    header = [\r\n      \"Date\",\r\n      \"Moving time (s)\",\r\n      \"Distance (km)\",\r\n      \"Avg speed (km/h)\",\r\n      \"Avg hr (bpm)\",\r\n      \" \",\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Navbar style={{ background: \"#000000\" }} variant=\"dark\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <NavItem className=\"float-left\">\r\n          <Form.Control\r\n            className=\"mr-1 btn btn-info\"\r\n            style={{ width: \"auto\",background: \"#000000\",color:\"#00FFFF\",borderStyle:\"none\",fontSize: \"20px\" }}\r\n            as=\"select\"\r\n            id=\"type\"\r\n            custom\r\n            value={topic}\r\n            onChange={({ target }) => {\r\n              setTopic(target.value);\r\n            }}\r\n          >\r\n            {topics.map((item, index) => {\r\n              return (\r\n                <option key={index} value={item}>\r\n                  {item}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n        </NavItem>\r\n\r\n        <NavItem className=\"ml-auto\">\r\n          <Button\r\n            variant=\"outline-success\"\r\n            onClick={() => {\r\n              setShowMode(1);\r\n            }}\r\n          >\r\n            Years\r\n          </Button>\r\n        </NavItem>\r\n        <NavItem className=\"ml-2\">\r\n          <Button\r\n            variant=\"outline-success\"\r\n            onClick={() => {\r\n              setShowMode(2);\r\n            }}\r\n          >\r\n            Months\r\n          </Button>\r\n        </NavItem>\r\n\r\n        <NavItem className=\"ml-2\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            onClick={() => {\r\n              setShowMode(4);\r\n            }}\r\n          >\r\n            Summary\r\n          </Button>\r\n        </NavItem>\r\n\r\n        <NavItem>\r\n          <Button\r\n            className=\"ml-2\"\r\n            variant=\"outline-primary\"\r\n            onClick={() => {\r\n              handleForm(0, null);\r\n              setShowMode(3);\r\n            }}\r\n          >\r\n            Query\r\n          </Button>\r\n        </NavItem>\r\n      </Navbar>\r\n\r\n      <Row>\r\n        <Col>\r\n          <h2> </h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      {showMode === 0 && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <img src={Logo} width=\"50%\" style={{ marginTop: \"50px\" }} alt=\"\" />\r\n        </div>\r\n      )}\r\n      {showMode === 1 && <YearsGraph df={df} _years={years} />}\r\n      {showMode === 2 && <MonthsGraph df={df} _years={years} />}\r\n      {showMode === 4 && <MonthsSummaryGraph df={df} _years={years} />}\r\n\r\n      {showMode === 3 && (\r\n        <DataForm\r\n          mode={mode}\r\n          data={myDataToShow}\r\n          header={header}\r\n          func={handleForm}\r\n        />\r\n      )}\r\n\r\n      {/*<div id=\"plot_div\" style={{ display: \"none\" }} />*/}\r\n      <ToastMsg\r\n        show={showToast}\r\n        close={() => {\r\n          setShowToast(false);\r\n        }}\r\n        params={message}\r\n      ></ToastMsg>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyActivities;\r\n","import React from 'react';\r\nimport { Modal,Spinner,Button} from 'react-bootstrap';\r\n\r\n\r\nconst OnProgressModal = ({ show,message}) => {\r\n    return (\r\n      <Modal show={show} size=\"sm\" backdrop=\"static\" keyboard={false} centered>\r\n        <Button variant=\"primary\" disabled>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"grow\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <span>&nbsp;&nbsp;&nbsp;</span>\r\n          {message}\r\n        </Button>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  export default OnProgressModal","import React, { useState, useEffect } from \"react\";\r\n//import React from \"react\";\r\nimport { Route, Navigate, Link, Routes, useLocation } from \"react-router-dom\";\r\nimport { Navbar, NavItem, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HouseDoor } from \"react-bootstrap-icons\";\r\n\r\nimport Homepage from \"../routes/Homepage\";\r\nimport MyActivities from \"../routes/MyActivities\";\r\nimport OnProgressModal from \"../components/OnProgressModal\";\r\n\r\nconst Navigation = ({ user, admin, callBack,progress }) => {\r\n  \r\n  const [progressShow, setProgressShow] = useState(false);\r\n\r\n  let location = useLocation();\r\n  let path = location.pathname;\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n  \r\n    setProgressShow(progress);\r\n  }, [progress]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <OnProgressModal show={progressShow} message={\"Updating db...\"} />\r\n      <Navbar style={{ background: \"#091834\" }} variant=\"light\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Link to=\"/\" className=\"mr-auto\">\r\n          <NavItem>\r\n            <Button variant=\"success\">\r\n              <HouseDoor color=\"white\" size={22} />\r\n            </Button>\r\n          </NavItem>\r\n        </Link>\r\n        {user && (\r\n          <>\r\n            {(path === \"/\") && (\r\n              <Link to=\"/MyActivities\" className=\"ml-auto\">\r\n                <NavItem>\r\n                  <Button variant=\"outline-warning\">Activities</Button>\r\n                </NavItem>\r\n              </Link>\r\n            )}\r\n\r\n            {(admin && (path === \"/\")) && (\r\n              <NavItem className=\"ml-auto\">\r\n                <Button\r\n                  variant=\"outline-danger\"\r\n                  onClick={() => {\r\n                    callBack(\"updateDb\");\r\n                  }}\r\n                >\r\n                  Update Db\r\n                </Button>\r\n              </NavItem>\r\n            )}\r\n\r\n            <div\r\n              className=\"ml-auto\"\r\n              style={{ paddingRight: \"15px\", color: \"darkcyan\" }}\r\n            >\r\n              {\"Logged in: \" + user}\r\n            </div>\r\n            <Link to={\"/\"}>\r\n              <NavItem>\r\n                <Button\r\n                  variant=\"dark\"\r\n                  onClick={() => {\r\n                    callBack(\"logout\");\r\n                  }}\r\n                >\r\n                  Log out\r\n                </Button>\r\n              </NavItem>\r\n            </Link>\r\n          </>\r\n        )}\r\n\r\n        {!user && (\r\n          <NavItem className=\"ml-auto\">\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={() => {\r\n                callBack(\"login\");\r\n              }}\r\n            >\r\n              Log in\r\n            </Button>\r\n          </NavItem>\r\n        )}\r\n      </Navbar>\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<Homepage />} />\r\n\r\n        <Route\r\n          path=\"/MyActivities\"\r\n          element={\r\n            user ? (\r\n              <MyActivities callBack={callBack} user={user} />\r\n            ) : (\r\n              <Navigate to=\"/\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\nimport ToastMsg from './ToastMsg';\r\n\r\nconst RegisterForm = ({ show, close, func }) => {\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [surName, setSurName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [admin, setAdmin] = useState(false)\r\n\r\n    const [showToast, setShowToast] = useState(false)\r\n\r\n    const [message, setMessage] = useState({\r\n        header: '',\r\n        message: '',\r\n        autohide: true,\r\n        delay: 0,\r\n        style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n        }\r\n    });\r\n\r\n\r\n    const handleRegin = async (p) => {\r\n\r\n        if (p) {\r\n\r\n            //alert(firstName);\r\n            let regData = {\r\n                \"firstname\": firstName,\r\n                \"lastname\": surName,\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"admin\": admin\r\n            }\r\n\r\n            const data = await func(2, regData);\r\n\r\n            if (data.code !== 200) {\r\n\r\n                setMessage({\r\n                    header: 'Error',\r\n                    message: data.message,\r\n                    closeParent: false,\r\n                    autohide: true,\r\n                    style: {\r\n\r\n                        backgroundcolor: '#00FF00',\r\n                        color: 'blue'\r\n\r\n                    },\r\n                });\r\n\r\n            } else if (data.code === 200) {\r\n\r\n                setMessage({\r\n                    header: 'Sign up success',\r\n                    message: data.message,\r\n                    closeParent: true,\r\n                    autohide: true,\r\n                    style: {\r\n\r\n                        backgroundcolor: '#00FF00',\r\n                        color: 'blue'\r\n\r\n                    },\r\n                });\r\n\r\n            }\r\n\r\n            clearFields();\r\n            setShowToast(true);\r\n\r\n        }\r\n    }\r\n\r\n    const clearFields = () => {\r\n        setFirstName('');\r\n        setSurName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setAdmin(false);\r\n    }\r\n\r\n    if (show) {\r\n\r\n        return (\r\n            <>\r\n                <Form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    handleRegin(true);\r\n                }}>\r\n                    <Modal.Body>\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>Firstname</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Etunimi\" value={firstName} onChange={({ target }) => setFirstName(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Surname</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Sukunimi\" value={surName} onChange={({ target }) => setSurName(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"email\" value={email} onChange={({ target }) => setEmail(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Salasana\" value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Admin\" onChange={( e ) => {                                \r\n                                setAdmin(e.target.checked)}} />\r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => { close(false) }}>\r\n                            Close\r\n                        </Button>\r\n                        <Button type='Submit' variant=\"primary\">\r\n                            Ready\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n\r\n                <ToastMsg show={showToast} close={() => { setShowToast(false); if (message.closeParent) close(false) }} params={message}></ToastMsg>\r\n            </>\r\n        )\r\n    } else {\r\n\r\n        return null\r\n    }\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Button, Modal, Form\r\n} from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ToastMsg from './ToastMsg';\r\nimport RegisterForm from './RegisterForm';\r\n\r\n\r\nconst LoginDialog = ({ _show, showDialog, func }) => {\r\n\r\n  let _labels = {\r\n    title: 'Log in',\r\n    btnClose: 'Close'\r\n  }\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [labels, setLabels] = useState(_labels);\r\n\r\n  const [showToast, setShowToast] = useState(false)\r\n\r\n  const handleClose = () => { };\r\n\r\n  const [message, setMessage] = useState({\r\n    header: '',\r\n    message: '',\r\n    autohide: false,\r\n    delay: 0,\r\n    style: {\r\n\r\n      backgroundcolor: '#00FF00',\r\n      color: 'blue'\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setLabels(labels);\r\n    setShow(_show);\r\n    if (!_show) {\r\n      setShowRegister(false);\r\n    }\r\n  }, [_show, labels])\r\n\r\n\r\n  const showRegisterForm = (p) => {\r\n\r\n    regLabels();\r\n    setShowRegister(p);\r\n\r\n  }\r\n\r\n  const regLabels = () => {\r\n\r\n    let _labels = {\r\n      title: 'Sign up',\r\n      btnClose: 'Close'\r\n    }\r\n    setLabels(_labels);\r\n  }\r\n\r\n  const logLabels = () => {\r\n\r\n    let _labels = {\r\n      title: 'Login',\r\n      btnClose: 'Close'\r\n    }\r\n    setLabels(_labels);\r\n  }\r\n\r\n\r\n  const handleLogin = async (p) => {\r\n\r\n    if (p) {\r\n\r\n      let auth = {\r\n        \"email\": email,\r\n        \"password\": password\r\n      }\r\n\r\n      let data = await func(1, auth);\r\n\r\n      if (data === null || data.code === 404 || data.code === 401) {\r\n\r\n        let message = null;\r\n        let closeParent = false;\r\n\r\n        if (data === null) {\r\n\r\n          closeParent = true;\r\n          message = \"No connection to backend\";\r\n        } else {\r\n\r\n          message = data.message;\r\n\r\n        }\r\n\r\n        setMessage({\r\n          header: 'Error',\r\n          message: message,\r\n          autohide: true,\r\n          delay: 2000,\r\n          closeParent: closeParent,\r\n          style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n\r\n          },\r\n        });\r\n\r\n        setShowToast(true);\r\n      } else if (data.code === 200) {\r\n\r\n        setMessage({\r\n          header: 'Login succesfull',\r\n          message: 'Welcome ;)',\r\n          autohide: true,\r\n          delay: 2000,\r\n          closeParent: true,\r\n          style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n\r\n          },\r\n        });\r\n\r\n        setShowToast(true);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      showDialog(false);\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton onClick={() => { handleLogin(false) }}>\r\n          <Modal.Title>{labels.title}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        {!showRegister &&\r\n          <>\r\n            <Form onSubmit={(event) => {\r\n              event.preventDefault()\r\n              handleLogin(true)\r\n            }}>\r\n\r\n              <Modal.Body>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email</Form.Label>\r\n\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={({ target }) => setEmail(target.value)} required />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                </Form.Group>\r\n\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <>\r\n                  <Button variant=\"warning\" className='mr-auto' onClick={() => { showRegisterForm(true) }}>\r\n                    New user\r\n                  </Button>\r\n                  <Button variant=\"secondary\" onClick={() => { handleLogin(false) }}>\r\n                    {labels.btnClose}\r\n                  </Button>\r\n                  <Button type='submit' variant=\"primary\">\r\n                    Log in\r\n                  </Button>\r\n                </>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </>\r\n\r\n        }\r\n        <RegisterForm show={showRegister} close={() => {\r\n          logLabels(); setShowRegister(false);\r\n        }} func={func} />\r\n        <ToastMsg show={showToast} close={() => { setShowToast(false); if (message.closeParent) showDialog(false) }} params={message}></ToastMsg>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default LoginDialog\r\n","import React from 'react';\r\nimport { Modal,Button} from 'react-bootstrap';\r\n\r\n\r\nconst ConfirmModal = ({ show, onHide, updateDb }) => {\r\n  \r\n  const handleAccept = () => {\r\n    onHide(false);\r\n    updateDb(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"  \r\n      backdrop=\"static\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Update the database\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5>Are you sure?</h5>\r\n        <p></p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onHide}>\r\n          No\r\n        </Button>\r\n\r\n        <Button variant=\"primary\" onClick={handleAccept}>\r\n          Yes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport userService from \"./services/user-service\";\r\nimport dataService from \"./services/data-service\";\r\n\r\nimport Navigation from \"./nav/Navigation\";\r\nimport LoginDialog from \"./components/LoginDialog\";\r\nimport ConfirmModal from \"./components/ConfirmModal\";\r\n//import OnProgressModal from \"./components/OnProgressModal\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [mongoData, setMongoData] = useState();\r\n  const [user, setUser] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  const [login, setLogin] = useState(false);\r\n  const [progressShow, setProgressShow] = useState(false);\r\n  const [confirmShow, setConfirmShow] = useState(false);\r\n  \r\n  \r\n  let navigate = useNavigate();\r\n\r\n  const getConfig = () => {\r\n    let _token = `bearer ${token}`;\r\n    const config = {\r\n      headers: { Authorization: _token },\r\n    };\r\n\r\n    return config;\r\n  };\r\n\r\n  const updateDataToMongo = async () => {\r\n    await dataService.updateDataToMongo(getConfig());\r\n  };\r\n\r\n  useEffect(() => {\r\n    let baseUrl = \"/\";\r\n    if (process.env.NODE_ENV === \"development\")\r\n      baseUrl = \"http://localhost:5000\";\r\n\r\n    const socket = socketIOClient(baseUrl);\r\n\r\n    socket.on(\"onProgress\", (p) => {\r\n      console.log(\"message from backend onProgress \" + p);\r\n      \r\n      setProgressShow(p);\r\n    });\r\n\r\n    socket.on(\"connect\", (data) => {\r\n      console.log(\"socket connected\");\r\n    });\r\n\r\n    socket.on(\"connected\", (p) => {\r\n      console.log(\"message from backend connected\" + p);\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // tänne kaikki cleaning-jutut\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let mongoData = await dataService.getDataFromMongo(getConfig());\r\n\r\n      setMongoData(mongoData);\r\n      try {\r\n        navigate(\"/MyActivities\");\r\n      } catch (exception) {\r\n        alert(exception.message);\r\n      }\r\n    };\r\n\r\n    if (user !== \"\") {\r\n      getData();\r\n    }\r\n  }, [token]);\r\n\r\n  const handleRegister = async (user) => {\r\n    const data = await userService.register(user);\r\n\r\n    return data;\r\n  };\r\n\r\n  const handleLogin = async (id, data, func) => {\r\n    if (id === 1) {\r\n      if (data !== null) {\r\n        const response = await userService.login(data);\r\n\r\n        if (response !== null) {\r\n          if (response.code === 200) {\r\n            setUser(response.data.email);\r\n            setUserName(response.data.firstname);\r\n            setAdmin(response.data.admin);\r\n            setToken(response.data.token);\r\n          }\r\n          return response;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (id === 2) {\r\n      return await handleRegister(data);\r\n    }\r\n  };\r\n\r\n  const callBack = async (topic, data) => {\r\n    if (topic === \"getActivitiesData\") {\r\n      return mongoData;\r\n    } else if (topic === \"updateDb\") {\r\n      updateDb();\r\n    } else if (topic === \"login\") {\r\n      setLogin(true);\r\n    } else if (topic === \"logout\") {\r\n      setUserName(\"\");\r\n    }\r\n  };\r\n\r\n  const updateDb = () => {\r\n    setConfirmShow(true);\r\n  };\r\n\r\n  const updateDatabase = async (p) => {\r\n    if (p === true) {\r\n      await updateDataToMongo();\r\n    }\r\n  };\r\n\r\n  const style = { backgroundColor: \"#353b45\" };\r\n\r\n  return (\r\n    <Container fluid className=\"App\">\r\n      <div style={style}>        \r\n        <LoginDialog\r\n          _show={login}\r\n          showDialog={setLogin}\r\n          func={handleLogin}\r\n        ></LoginDialog>\r\n\r\n        <ConfirmModal\r\n          show={confirmShow}\r\n          onHide={() => setConfirmShow(false)}\r\n          updateDb={updateDatabase}\r\n        />\r\n        {/*<OnProgressModal show={progressShow} message={\"Loading...\"} />*/}\r\n      </div>\r\n\r\n      <Navigation user={userName} admin={admin} callBack={callBack} progress={progressShow} />\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport './index.css';\r\nimport App from './App';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router><App /></Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}