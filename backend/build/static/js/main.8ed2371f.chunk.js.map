{"version":3,"sources":["services/user-service.js","services/data-service.js","img/logo.svg","routes/Homepage.js","components/Row.js","components/DataForm.js","components/ToastMsg.js","components/YearsGraph.js","components/MonthsGraph.js","routes/MyActivities.js","nav/Navigation.js","components/RegisterForm.js","components/LoginDialog.js","components/ConfirmModal.js","components/OnProgressModal.js","App.js","index.js"],"names":["require","config","baseUrl","console","log","login","user","a","axios","post","_response","response","code","status","data","undefined","error","message","register","newUser","getDataFromMongo","get","updateDataToMongo","Homepage","style","paddingLeft","paddingTop","color","fontSize","display","alignItems","justifyContent","src","Logo","width","marginTop","alt","Row","mode","item","func","useState","typeOptions","id","Date","startDate","setStartDate","endDate","setEndDate","type","setType","useEffect","handleRow","values","dateString","date","month","getMonth","toString","day","getDate","year","getFullYear","length","getFormmatedDate","start_date","moving_time","distance","average_speed","average_heartrate","map","ind","textAlign","Button","className","_id","onClick","e","target","marginLeft","required","selected","onChange","Form","Control","as","custom","value","event","preventDefault","DataForm","header","HeaderRow","maxHeight","autoComplete","Table","responsive","ride_id","ToastMsg","show","close","params","backgroundColor","backgroundcolor","position","top","left","transform","autohide","Toast","onClose","delay","Header","Body","YearsGraph","condition","tmp","df","years","setMode","val","forEach","sub_df","loc","columns","toDateTime","eq","rows","sum","Math","round","push","layout","gDf","DataFrame","ride","index","plot_bgcolor","paper_bgcolor","yaxis","title","xaxis","displayModeBar","displaylogo","plot","bar","text","x","legend","bgcolor","bordercolor","borderwidth","font","family","size","line","background","MonthsGraph","setYear","_year","parseInt","months","Array","end","keys","MyActivities","callBack","setDf","setYears","myDataToShow","setMyDataToShow","showMode","setShowMode","showToast","setShowToast","getYears","getData","sf","Series","unique","handleForm","_mode","doQuery","setUTCHours","toISOString","result","i","at","iloc","toJSON","toFixed","Container","Navbar","variant","Toggle","aria-controls","NavItem","document","getElementById","visibility","Col","Navigation","admin","path","useLocation","pathname","to","paddingRight","element","replace","RegisterForm","firstName","setFirstName","surName","setSurName","email","setEmail","password","setPassword","setAdmin","setMessage","handleRegin","p","regData","closeParent","clearFields","onSubmit","Modal","Group","Label","placeholder","controlId","Check","label","checked","Footer","LoginDialog","_show","showDialog","setShow","showRegister","setShowRegister","btnClose","labels","setLabels","regLabels","handleLogin","auth","onHide","closeButton","Title","ConfirmModal","updateDb","aria-labelledby","centered","backdrop","OnProgressModal","keyboard","disabled","Spinner","animation","role","aria-hidden","App","mongoData","setMongoData","setUser","userName","setUserName","token","setToken","setLogin","progressShow","setProgressShow","confirmShow","setConfirmShow","navigate","useNavigate","getConfig","headers","Authorization","dataService","socket","socketIOClient","on","disconnect","exception","alert","handleRegister","userService","firstname","topic","updateDatabase","fluid","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8ed2371f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nrequire('dotenv').config();\r\nlet baseUrl = '/api/user/';\r\nif (process.env.NODE_ENV === 'development')\r\n  baseUrl = 'http://localhost:5000/api/user/';\r\n\r\nconsole.log(baseUrl);\r\n\r\nconst login = async (user) => {\r\n\r\n  try {\r\n\r\n    const _response = await axios.post(baseUrl + 'login', user);\r\n\r\n    const response = {\r\n      code: _response.status,\r\n      data: _response.data\r\n    }\r\n\r\n    return response;\r\n\r\n  } catch (exception) {\r\n\r\n\r\n    let error = exception.response;\r\n\r\n    if (error !== undefined) {\r\n\r\n      let response = {\r\n        code: error.status,\r\n        message: error.data.error\r\n      }\r\n\r\n      return response;\r\n    } else {\r\n\r\n      return null;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nconst register = async (newUser) => {\r\n\r\n  if (newUser === null) {\r\n    return null\r\n  }\r\n\r\n  try {\r\n\r\n    const response = await axios.post(baseUrl + 'register', newUser);\r\n\r\n    let _response = {\r\n      code: response.status,\r\n      message: response.data.message\r\n    }\r\n\r\n    return _response;\r\n\r\n  } catch (exception) {\r\n\r\n    let error = exception.response;\r\n\r\n    let response = {\r\n      code: error.status,\r\n      message: error.data.error\r\n    }\r\n    return response;\r\n  }\r\n\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { login, register }","import axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\nlet baseUrl = \"/api/data/\";\r\nif (process.env.NODE_ENV === \"development\")\r\n  baseUrl = \"http://localhost:5000/api/data/\";\r\n\r\nconst getDataFromMongo = async (config) => {\r\n  const response = await axios.get(baseUrl + \"getactivities\", config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst updateDataToMongo = async (config) => {\r\n  const response = await axios.get(baseUrl + \"getstravaactivities\", config);\r\n  // palauttaa datan pituuden\r\n\r\n  return response.data;\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getDataFromMongo, updateDataToMongo };\r\n","export default __webpack_public_path__ + \"static/media/logo.596a690d.svg\";","import React from \"react\";\r\nimport Logo from \"../img/logo.svg\";\r\n\r\nconst Homepage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ paddingLeft: \"10px\", paddingTop: \"10px\" }}>\r\n        <div style={{ color: \"white\", fontSize: \"30px\" }}>\r\n          Pyöräilyaktiviteettien data-analytiikka\r\n        </div>\r\n\r\n        <h6 style={{ color: \"#609CE1\" }}>2022 ©AA4598</h6>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <img src={Logo} width=\"40%\" style={{ marginTop: \"50px\" }} alt=\"\"></img>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default Homepage;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Pencil, Trash, XCircleFill, Search} from 'react-bootstrap-icons';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Row = ({ mode, item, func }) => {\r\n\r\n  const [typeOptions] = useState(['Distance','Moving time','Average speed','Average heartrate'])\r\n  const [id, setId] = useState(\"\")\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [type, setType] = useState(typeOptions[0])\r\n  //const [repeat, setRepeat] = useState(0)\r\n  //const [weight, setWeight] = useState(0)\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n    \r\n\r\n  }, []);\r\n\r\n\r\n  const handleRow = (mode, id) => {\r\n\r\n    func(mode, id);\r\n  }\r\n\r\n  if (mode === 2) {\r\n\r\n    const getFormmatedDate = (dateString) => {\r\n      const date = new Date(dateString);\r\n      let month = (date.getMonth() + 1).toString();\r\n      let day = date.getDate().toString();\r\n      let year = date.getFullYear().toString();\r\n      if (month.length < 2)\r\n        month = '0' + month;\r\n      if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n      return (month + \"/\" + day + \"/\" + year);\r\n    }\r\n\r\n\r\n    let formattedDate = getFormmatedDate(item.start_date);\r\n\r\n    let values = [formattedDate, item.moving_time, item.distance, item.average_speed,item.average_heartrate];\r\n\r\n    return (\r\n\r\n      <tbody>\r\n\r\n        <tr>\r\n          {/* header */}   \r\n          {values.map((item, ind) => {\r\n\r\n            return <td key={ind}> {item} </td>\r\n          }\r\n          )}\r\n\r\n          <td style={{ textAlign: 'right' }}>\r\n          \r\n            <Button className=\"btn btn-success btn-sm\" id={item._id} onClick={(e) => { handleRow(3, e.target.id) }} >\r\n              <Pencil id={item._id}></Pencil>\r\n            </Button>\r\n            <Button className=\"btn btn-secondary btn-sm\" style={{ marginLeft: '5px' }} id={item._id} onClick={(e) => { handleRow(1, e.target.id) }} >\r\n              <Trash id={item._id}></Trash>\r\n            </Button>\r\n\r\n          </td>\r\n        </tr>\r\n      </tbody >\r\n\r\n    )\r\n\r\n  } else {\r\n\r\n    console.log(\"MODE= \"+mode)\r\n\r\n    // parametri turha kun/jos köytetään tilamuuttujaa\r\n    const handleSearch = (event, _id) => {\r\n\r\n      if (startDate === '' || endDate === ''){\r\n\r\n        return;\r\n\r\n      } else {\r\n\r\n        event.preventDefault()\r\n\r\n        const data = {\r\n\r\n          startDate: startDate,\r\n          endDate: endDate\r\n        }\r\n\r\n        if (mode === 0) {\r\n          \r\n          func(5, data);\r\n        } else {\r\n          //func(6, data);\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n\r\n      <tbody>\r\n\r\n        <tr>\r\n\r\n          <td>\r\n            <DatePicker type='date' className=\"form-control\" id='dp' required selected={startDate} onChange={startDate => setStartDate(startDate)} />\r\n          </td>\r\n          <td>\r\n            <DatePicker type='date' className=\"form-control\" id='dp2' required selected={endDate} onChange={endDate => setEndDate(endDate)} />\r\n          </td>\r\n          <td>\r\n            <Form.Control as=\"select\" id='type' custom value={type} onChange={({ target }) => {\r\n              setType(target.value)\r\n            }}>\r\n\r\n              {typeOptions.map((item, ind) => {\r\n\r\n                return <option key={ind} value={item}> {item}</option>\r\n              }\r\n              )}\r\n\r\n            </Form.Control>\r\n          </td>\r\n\r\n          <td>\r\n            <Button type=\"submit\" className=\"btn btn-success\" id={id} onClick={(e) => { handleSearch(e, e.target.id) }}>\r\n              <Search id={id}></Search>\r\n            </Button>\r\n          </td>\r\n          <td>\r\n            <Button className=\"btn btn-secondary\" id={item._id} onClick={(e) => { handleRow(2, e.target.id) }}>\r\n              <XCircleFill id={item._id}></XCircleFill>\r\n            </Button>\r\n          </td>\r\n\r\n        </tr>\r\n      </tbody>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Row;","import React from 'react';\r\nimport Row from './Row';\r\nimport { Table, Form } from 'react-bootstrap';\r\nimport './css/form.css';\r\n\r\n\r\nconst DataForm = ({ mode, data, header, func }) => {\r\n\r\n  \r\n  \r\n  const HeaderRow = ({ header }) => {\r\n\r\n    return (\r\n      <tbody>\r\n\r\n        <tr>\r\n          {header.map((item, ind) => {\r\n\r\n            return <th key={ind}>{item}</th>\r\n          }\r\n          )}\r\n        </tr>\r\n\r\n      </tbody>\r\n    )\r\n  }\r\n\r\n  return (\r\n\r\n    <Form className=\"overflow-auto form\" style={{\r\n      maxHeight: '587px'\r\n    }} autoComplete=\"off\">\r\n\r\n      <Table className=\"table table-sm table-primary\" responsive=\"sm\">\r\n        {data.length > 0 &&\r\n          <HeaderRow header={header} />\r\n        }\r\n        {data.length > 0 && data.map((item) => {\r\n\r\n          return <Row key={item.ride_id} mode={mode} item={item} func={func} />\r\n        }\r\n        )}\r\n\r\n      </Table>\r\n    </Form>\r\n  )\r\n\r\n}\r\nexport default DataForm","import React from 'react'\r\nimport { Toast } from 'react-bootstrap';\r\n\r\nconst ToastMsg = ({ show, close, params }) => {\r\n\r\n  const style = {\r\n\r\n    backgroundColor: params.style.backgroundcolor,\r\n    color: params.style.color,\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)'\r\n\r\n  }\r\n\r\n  const headerStyle = {\r\n    backgroundColor: 'black',\r\n    color: 'white'\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      { params.autohide &&\r\n        <Toast style={style} onClose={() => close()} show={show} delay={params.delay} autohide>\r\n\r\n          <Toast.Header style={headerStyle}>\r\n            <strong className=\"mr-auto\">{params.header}</strong>\r\n\r\n          </Toast.Header>\r\n          <Toast.Body>{params.message}</Toast.Body>\r\n        </Toast>\r\n      }\r\n      {\r\n        !params.autohide &&\r\n        <Toast style={style} onClose={() => close()} show={show}>\r\n\r\n          <Toast.Header>\r\n            <strong className=\"mr-auto\">{params.header}</strong>\r\n\r\n          </Toast.Header>\r\n          <Toast.Body>{params.message}</Toast.Body>\r\n        </Toast>\r\n      }\r\n    </div >\r\n\r\n  );\r\n\r\n}\r\nexport default ToastMsg;","import React, { useState } from \"react\";\r\nimport { DataFrame, toDateTime } from \"danfojs\";\r\n\r\nconst YearsGraph = ({ df, years }) => {\r\n  const [mode, setMode] = useState(\"bar\");\r\n  let condition;\r\n  let tmp;\r\n\r\n  let val = [];\r\n\r\n  years.forEach((item) => {\r\n    let sub_df = df.loc({\r\n      columns: [\"distance\", \"start_date\"],\r\n    });\r\n\r\n    condition = toDateTime(sub_df[\"start_date\"]).year().eq(item);\r\n    sub_df = sub_df.loc({ rows: condition });\r\n\r\n    tmp = sub_df[\"distance\"].sum();\r\n    tmp = Math.round(tmp / 1000);\r\n    val.push(tmp);\r\n  });\r\n\r\n  const gDf = new DataFrame({ ride: val }, { index: years });\r\n  let layout;\r\n  let config;\r\n\r\n  if (mode === \"bar\") {\r\n    layout = {\r\n      width: 1000,\r\n      plot_bgcolor: \"#00BBAA\",\r\n      paper_bgcolor: \"#00BB55\",\r\n      yaxis: {\r\n        title: \"km\",\r\n      },\r\n      xaxis: {\r\n        title: \"Year\",\r\n      },\r\n    };\r\n\r\n    config = {\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").bar({ layout, config });\r\n  } else {\r\n    layout = {\r\n      title: {\r\n        text: \"\",\r\n        x: 0,\r\n      },\r\n      legend: {\r\n        bgcolor: \"#fcba03\",\r\n        bordercolor: \"#444\",\r\n        borderwidth: 1,\r\n        font: { family: \"Arial\", size: 10, color: \"#fff\" },\r\n      },\r\n      width: 1000,\r\n      yaxis: {\r\n        title: \"km\",\r\n      },\r\n      xaxis: {\r\n        title: \"Year\",\r\n      },\r\n    };\r\n\r\n    config = {\r\n      columns: [\"ride\"], //columns to plot\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").line({ layout, config });\r\n  }\r\n\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  return (\r\n    <div>\r\n      <select\r\n        style={{ background: \"cyan\" }}\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\nexport default YearsGraph;\r\n","import React, { useState} from \"react\";\r\nimport { DataFrame, toDateTime} from \"danfojs\";\r\n\r\nconst MonthsGraph = ({ df, years}) => {\r\n  \r\n    \r\n  const [mode, setMode] = useState(\"bar\");\r\n  const [year, setYear] = useState(years[0]);\r\n  \r\n  let sub_df = df.loc({\r\n    columns: [\"distance\", \"start_date\"],\r\n  });\r\n  \r\n  let _year=parseInt(year);  \r\n  let condition = toDateTime(sub_df[\"start_date\"]).year().eq(_year);\r\n  \r\n  sub_df = sub_df.loc({ rows: condition });\r\n\r\n  \r\n  let val = [];\r\n\r\n  for (let month = 0; month < 12; month++) {\r\n    condition = toDateTime(sub_df[\"start_date\"]).month().eq(month);\r\n    let sub_dfx = sub_df.loc({ rows: condition });\r\n    //console.log(sub_dfx);\r\n    let sum = sub_dfx[\"distance\"].sum();\r\n    sum = Math.round(sum / 1000);\r\n    \r\n    val.push(sum);\r\n  }\r\n\r\n  if (mode === \"line\") {\r\n    const start = 1;\r\n    const end = 12;\r\n    const months = [...Array(end - start + 1).keys()].map((x) => x + start);\r\n    const gDf = new DataFrame({ ride: val }, { index: months });\r\n\r\n    const layout = {\r\n      title: {\r\n        text: \"\",\r\n        x: 0,\r\n      },\r\n      \r\n      \r\n      width: 1000,\r\n      yaxis: {\r\n        title: \"km\",\r\n      },\r\n      xaxis: {\r\n        title: \"Month\",\r\n      },\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",      \r\n    };\r\n\r\n    const config = {\r\n      columns: [\"ride\"], //columns to plot\r\n      displayModeBar: false,\r\n      displaylogo: false,\r\n    };\r\n\r\n    gDf.plot(\"plot_div\").line({ layout, config });\r\n    //*********************************************\r\n  } else {\r\n    const start = 1;\r\n    const end = 12;\r\n    const months = [...Array(end - start + 1).keys()].map((x) => x + start);\r\n    const gDf = new DataFrame({ ride: val }, { index: months });\r\n\r\n    const layout = {\r\n      width: 1000,\r\n      plot_bgcolor: \"#133863\",\r\n      paper_bgcolor: \"#133863\",\r\n      \r\n      \r\n      yaxis: {\r\n        title: \"km\",\r\n        color:\"#00FF00\"\r\n      },\r\n      xaxis: {\r\n        title: \"Month\",\r\n        color:\"#00FFFF\"        \r\n      },\r\n      \r\n    };\r\n\r\n    const config = {\r\n      displayModeBar: false,\r\n      displaylogo: false,      \r\n    };\r\n\r\n    gDf.plot(\"plot_div\").bar({ layout, config});\r\n  }\r\n  const modes = [\"bar\", \"line\"];\r\n\r\n  return (\r\n    <div>\r\n       \r\n      <select\r\n        style={{ background: \"cyan\" }}\r\n        value={mode}\r\n        onChange={({ target }) => {\r\n          setMode(target.value);\r\n        }}\r\n      >\r\n        {modes.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <select\r\n        style={{ background: \"darkcyan\" }}\r\n        value={year}\r\n        onChange={({ target }) => {\r\n          setYear(target.value);\r\n        }}\r\n      >\r\n        {years.map((item, index) => {\r\n          return (\r\n            <option key={index} value={item}>\r\n              {item}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthsGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DataFrame, toDateTime, Series } from \"danfojs\";\r\nimport DataForm from \"../components/DataForm\";\r\n\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { Navbar, NavItem } from \"react-bootstrap\";\r\n\r\nimport ToastMsg from \"../components/ToastMsg\";\r\nimport YearsGraph from \"../components/YearsGraph\";\r\nimport MonthsGraph from \"../components/MonthsGraph\";\r\n\r\nconst MyActivities = ({ callBack, user }) => {\r\n  const [df, setDf] = useState();\r\n  const [years, setYears] = useState();\r\n\r\n  const [mode, setMode] = useState(2); // oletus että kaikki näytetään\r\n  //const [myData, setMyData] = useState([]);\r\n  const [myDataToShow, setMyDataToShow] = useState([]);\r\n\r\n  const [showMode, setShowMode] = useState(0); // oletus että kaikki näytetään\r\n\r\n  const [showToast, setShowToast] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    header: \"\",\r\n    message: \"\",\r\n    autohide: false,\r\n    delay: 0,\r\n    style: {\r\n      backgroundcolor: \"#00FF00\",\r\n      color: \"blue\",\r\n    },\r\n  });\r\n\r\n  //***************************************************************\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const data = await callBack(\"getActivitiesData\");\r\n      const df = new DataFrame(data);\r\n      console.log(df);\r\n      setYears(await getYears(df));\r\n      setDf(df);\r\n    };\r\n    getData();\r\n  }, [callBack]);\r\n\r\n  const getYears = async (df) => {\r\n    let sub_df = df.loc({\r\n      columns: [\"start_date\"],\r\n    });\r\n    sub_df[\"start_date\"] = toDateTime(sub_df[\"start_date\"]).year();\r\n\r\n    sub_df = sub_df.loc({ columns: [\"start_date\"] });\r\n    let sf = new Series(sub_df[\"start_date\"].values);\r\n    return sf.unique().values;\r\n  };\r\n\r\n  const showTheToast = (header, message, delay, backgroundcolor, color) => {\r\n    setMessage({\r\n      header: header,\r\n      message: message,\r\n      autohide: true,\r\n      delay: delay,\r\n      closeParent: false,\r\n      style: {\r\n        backgroundcolor: backgroundcolor,\r\n        color: color,\r\n      },\r\n    });\r\n\r\n    setShowToast(true);\r\n  };\r\n\r\n  const handleForm = async (_mode, id) => {\r\n    if (_mode === 0) {\r\n      let data = [];\r\n\r\n      setMyDataToShow([data]);\r\n      setMode(_mode);\r\n    } else if (_mode === 5) {\r\n      // id-muuttujassa tulee myös data vois toki olla 2 eri muuttujaa\r\n      let data = id;\r\n\r\n      doQuery(data);\r\n    }\r\n  };\r\n\r\n  const action = () => {\r\n    //getAll();\r\n  };\r\n\r\n  const doQuery = async (data) => {\r\n    let startDate = data.startDate;\r\n    let endDate = data.endDate;\r\n\r\n    startDate = new Date(startDate.setUTCHours(0, 0, 0, 0));\r\n    endDate = new Date(endDate.setUTCHours(23, 59, 0, 0));\r\n\r\n    startDate = startDate.toISOString();\r\n    endDate = endDate.toISOString();\r\n\r\n    let sub_df = df.loc({\r\n      columns: [\r\n        \"ride_id\",\r\n        \"start_date\",\r\n        \"moving_time\",\r\n        \"distance\",\r\n        \"average_speed\",\r\n        \"average_heartrate\",\r\n      ],\r\n    });\r\n\r\n    let result = [];\r\n    for (let i = 0; i < sub_df.index.length; i++) {\r\n      let date = sub_df.at(i, \"start_date\");\r\n\r\n      if (date >= startDate && date <= endDate) {\r\n        console.log(date);\r\n        let val = sub_df.iloc({ rows: [i] }).toJSON();\r\n        console.log(\"----------------------------------\");\r\n        val[0].distance = val[0].distance / 1000;\r\n        val[0].average_speed = (\r\n          (val[0].distance / val[0].moving_time) *\r\n          3600\r\n        ).toFixed(2);\r\n\r\n        result.push(val[0]);\r\n      }\r\n    }\r\n\r\n    setMyDataToShow(result);\r\n    setMode(2);\r\n  };\r\n\r\n  let header = [\"Start\", \"End\", \"Topic\"];\r\n  if (mode === 2) {\r\n    // nämää pitäis kai saada jostakin luettua, onko josnin kentät minkä nimisiä\r\n    header = [\r\n      \"Date\",\r\n      \"Duration (s)\",\r\n      \"Distance (km)\",\r\n      \"Avg speed (km/h)\",\r\n      \"Avg hr\",\r\n    ];\r\n  }\r\n  //{ background: \"#091834\" }\r\n  return (\r\n    <Container>\r\n      <Navbar style={{ background: \"#000000\" }} variant=\"dark\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <NavItem className=\"ml-auto\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            onClick={() => {\r\n              document.getElementById(\"plot_div\").style.visibility = \"visible\";\r\n              setShowMode(1);\r\n            }}\r\n          >\r\n            Years\r\n          </Button>\r\n        </NavItem>\r\n        <NavItem className=\"ml-2\">\r\n          <Button\r\n            variant=\"outline-info\"\r\n            onClick={() => {\r\n              document.getElementById(\"plot_div\").style.visibility = \"visible\";\r\n              setShowMode(2);\r\n            }}\r\n          >\r\n            Months\r\n          </Button>\r\n        </NavItem>\r\n\r\n        <NavItem>\r\n          <Button\r\n            className=\"ml-2\"\r\n            variant=\"outline-success\"\r\n            onClick={() => {\r\n              handleForm(0, null);\r\n              setShowMode(3);\r\n              document.getElementById(\"plot_div\").style.visibility = \"hidden\";\r\n            }}\r\n          >\r\n            Query\r\n          </Button>\r\n        </NavItem>\r\n      </Navbar>\r\n\r\n      <Row>\r\n        <Col>\r\n          <h2> </h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      {showMode === 1 && <YearsGraph df={df} years={years} />}\r\n      {showMode === 2 && <MonthsGraph df={df} years={years} />}\r\n\r\n      {/*{showMode !== 3 && */}\r\n\r\n      {showMode === 3 && (\r\n        <DataForm\r\n          mode={mode}\r\n          data={myDataToShow}\r\n          header={header}\r\n          func={handleForm}\r\n        />\r\n      )}\r\n\r\n      <div id=\"plot_div\" />\r\n      <ToastMsg\r\n        show={showToast}\r\n        close={() => {\r\n          setShowToast(false);\r\n          action();\r\n        }}\r\n        params={message}\r\n      ></ToastMsg>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyActivities;\r\n","import React from \"react\";\r\nimport { Route, Navigate, Link, Routes, useLocation } from \"react-router-dom\";\r\nimport { Navbar, NavItem, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HouseDoor } from \"react-bootstrap-icons\";\r\n\r\nimport Homepage from \"../routes/Homepage\";\r\nimport MyActivities from \"../routes/MyActivities\";\r\n\r\nconst Navigation = ({ user, admin, callBack }) => {\r\n  let location = useLocation();\r\n\r\n  let path = location.pathname;\r\n\r\n  return (\r\n    <>\r\n      <Navbar style={{ background: \"#091834\" }} variant=\"light\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Link to=\"/\" className=\"mr-auto\">\r\n          <NavItem>\r\n            <Button variant=\"success\">\r\n              <HouseDoor color=\"white\" size={22} />\r\n            </Button>\r\n          </NavItem>\r\n        </Link>\r\n        {user && (\r\n          <>\r\n            {path === \"/\" && (\r\n              <Link to=\"/MyActivities\" className=\"ml-auto\">\r\n                <NavItem>\r\n                  <Button variant=\"outline-warning\">Activities</Button>\r\n                </NavItem>\r\n              </Link>\r\n            )}\r\n\r\n            {admin && (\r\n              <NavItem className=\"ml-auto\">\r\n                <Button\r\n                  variant=\"outline-info\"\r\n                  onClick={() => {\r\n                    callBack(\"updateDb\");\r\n                  }}\r\n                >\r\n                  Update Db\r\n                </Button>\r\n              </NavItem>\r\n            )}\r\n\r\n            <div\r\n              className=\"ml-auto\"\r\n              style={{ paddingRight: \"15px\", color: \"darkmagenta\" }}\r\n            >\r\n              {\"Kirjautunut: \" + user}\r\n            </div>\r\n            <Link to={\"/\"}>\r\n              <NavItem>\r\n                <Button\r\n                  variant=\"dark\"\r\n                  onClick={() => {\r\n                    callBack(\"logout\");\r\n                  }}\r\n                >\r\n                  Kirjaudu ulos\r\n                </Button>\r\n              </NavItem>\r\n            </Link>\r\n          </>\r\n        )}\r\n\r\n        {!user && (\r\n          <NavItem className=\"ml-auto\">\r\n            <Button\r\n              variant=\"info\"\r\n              onClick={() => {\r\n                callBack(\"login\");\r\n              }}\r\n            >\r\n              Kirjaudu\r\n            </Button>\r\n          </NavItem>\r\n        )}\r\n      </Navbar>\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={<Homepage />} />\r\n\r\n        <Route\r\n          path=\"/MyActivities\"\r\n          element={\r\n            user ? (\r\n              <MyActivities callBack={callBack} user={user} />\r\n            ) : (\r\n              <Navigate to=\"/\" replace />\r\n            )\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Modal } from 'react-bootstrap';\r\nimport ToastMsg from './ToastMsg';\r\n\r\nconst RegisterForm = ({ show, close, func }) => {\r\n\r\n    const [firstName, setFirstName] = useState(\"\")\r\n    const [surName, setSurName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [admin, setAdmin] = useState(false)\r\n\r\n    const [showToast, setShowToast] = useState(false)\r\n\r\n    const [message, setMessage] = useState({\r\n        header: '',\r\n        message: '',\r\n        autohide: true,\r\n        delay: 0,\r\n        style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n        }\r\n    });\r\n\r\n\r\n    const handleRegin = async (p) => {\r\n\r\n        if (p) {\r\n\r\n            //alert(firstName);\r\n            let regData = {\r\n                \"firstname\": firstName,\r\n                \"lastname\": surName,\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"admin\": admin\r\n            }\r\n\r\n            const data = await func(2, regData);\r\n\r\n            if (data.code !== 200) {\r\n\r\n                setMessage({\r\n                    header: 'Virhe',\r\n                    message: data.message,\r\n                    closeParent: false,\r\n                    autohide: true,\r\n                    style: {\r\n\r\n                        backgroundcolor: '#00FF00',\r\n                        color: 'blue'\r\n\r\n                    },\r\n                });\r\n\r\n            } else if (data.code === 200) {\r\n\r\n                setMessage({\r\n                    header: 'Rekisteröinti onnistui',\r\n                    message: data.message,\r\n                    closeParent: true,\r\n                    autohide: true,\r\n                    style: {\r\n\r\n                        backgroundcolor: '#00FF00',\r\n                        color: 'blue'\r\n\r\n                    },\r\n                });\r\n\r\n            }\r\n\r\n            clearFields();\r\n            setShowToast(true);\r\n\r\n        }\r\n    }\r\n\r\n    const clearFields = () => {\r\n        setFirstName('');\r\n        setSurName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setAdmin(false);\r\n    }\r\n\r\n    if (show) {\r\n\r\n        return (\r\n            <>\r\n                <Form onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    handleRegin(true);\r\n                }}>\r\n                    <Modal.Body>\r\n\r\n                        <Form.Group >\r\n                            <Form.Label>Etunimi</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Etunimi\" value={firstName} onChange={({ target }) => setFirstName(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Sukunimi</Form.Label>\r\n                            <Form.Control type=\"input\" placeholder=\"Sukunimi\" value={surName} onChange={({ target }) => setSurName(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"email\" value={email} onChange={({ target }) => setEmail(target.value)} required />\r\n                        </Form.Group>\r\n                        <Form.Group >\r\n                            <Form.Label>Salasana</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Salasana\" value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Admin\" onChange={( e ) => {                                \r\n                                setAdmin(e.target.checked)}} />\r\n                        </Form.Group>\r\n\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => { close(false) }}>\r\n                            Sulje\r\n                        </Button>\r\n                        <Button type='Submit' variant=\"primary\">\r\n                            Valmis\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n\r\n                <ToastMsg show={showToast} close={() => { setShowToast(false); if (message.closeParent) close(false) }} params={message}></ToastMsg>\r\n            </>\r\n        )\r\n    } else {\r\n\r\n        return null\r\n    }\r\n}\r\n\r\nexport default RegisterForm","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Button, Modal, Form\r\n} from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ToastMsg from './ToastMsg';\r\nimport RegisterForm from './RegisterForm';\r\n\r\n\r\nconst LoginDialog = ({ _show, showDialog, func }) => {\r\n\r\n  let _labels = {\r\n    title: 'Kirjautuminen',\r\n    btnClose: 'Sulje'\r\n  }\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [labels, setLabels] = useState(_labels);\r\n\r\n  const [showToast, setShowToast] = useState(false)\r\n\r\n  const handleClose = () => { };\r\n\r\n  const [message, setMessage] = useState({\r\n    header: '',\r\n    message: '',\r\n    autohide: false,\r\n    delay: 0,\r\n    style: {\r\n\r\n      backgroundcolor: '#00FF00',\r\n      color: 'blue'\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    setLabels(labels);\r\n    setShow(_show);\r\n    if (!_show) {\r\n      setShowRegister(false);\r\n    }\r\n  }, [_show, labels])\r\n\r\n\r\n  const showRegisterForm = (p) => {\r\n\r\n    regLabels();\r\n    setShowRegister(p);\r\n\r\n  }\r\n\r\n  const regLabels = () => {\r\n\r\n    let _labels = {\r\n      title: 'Rekisteröinti',\r\n      btnClose: 'Sulje'\r\n    }\r\n    setLabels(_labels);\r\n  }\r\n\r\n  const logLabels = () => {\r\n\r\n    let _labels = {\r\n      title: 'Kirjautuminen',\r\n      btnClose: 'Sulje'\r\n    }\r\n    setLabels(_labels);\r\n  }\r\n\r\n\r\n  const handleLogin = async (p) => {\r\n\r\n    if (p) {\r\n\r\n      let auth = {\r\n        \"email\": email,\r\n        \"password\": password\r\n      }\r\n\r\n      let data = await func(1, auth);\r\n\r\n      if (data === null || data.code === 404 || data.code === 401) {\r\n\r\n        let message = null;\r\n        let closeParent = false;\r\n\r\n        if (data === null) {\r\n\r\n          closeParent = true;\r\n          message = \"Ei yhteyttä backendiin\";\r\n        } else {\r\n\r\n          message = data.message;\r\n\r\n        }\r\n\r\n        setMessage({\r\n          header: 'Error',\r\n          message: message,\r\n          autohide: true,\r\n          delay: 2000,\r\n          closeParent: closeParent,\r\n          style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n\r\n          },\r\n        });\r\n\r\n        setShowToast(true);\r\n      } else if (data.code === 200) {\r\n\r\n        setMessage({\r\n          header: 'Kirjautuminen onnistui',\r\n          message: 'Tervetuloa ;)',\r\n          autohide: true,\r\n          delay: 2000,\r\n          closeParent: true,\r\n          style: {\r\n\r\n            backgroundcolor: '#00FF00',\r\n            color: 'blue'\r\n\r\n          },\r\n        });\r\n\r\n        setShowToast(true);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      showDialog(false);\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton onClick={() => { handleLogin(false) }}>\r\n          <Modal.Title>{labels.title}</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        {!showRegister &&\r\n          <>\r\n            <Form onSubmit={(event) => {\r\n              event.preventDefault()\r\n              handleLogin(true)\r\n            }}>\r\n\r\n              <Modal.Body>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                  <Form.Label>Email</Form.Label>\r\n\r\n                  <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={({ target }) => setEmail(target.value)} required />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                  <Form.Label>Salasana</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={({ target }) => setPassword(target.value)} required />\r\n                </Form.Group>\r\n\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <>\r\n                  <Button variant=\"warning\" className='mr-auto' onClick={() => { showRegisterForm(true) }}>\r\n                    Uusi käyttäjä\r\n                  </Button>\r\n                  <Button variant=\"secondary\" onClick={() => { handleLogin(false) }}>\r\n                    {labels.btnClose}\r\n                  </Button>\r\n                  <Button type='submit' variant=\"primary\">\r\n                    Kirjaudu\r\n                  </Button>\r\n                </>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </>\r\n\r\n        }\r\n        <RegisterForm show={showRegister} close={() => {\r\n          logLabels(); setShowRegister(false);\r\n        }} func={func} />\r\n        <ToastMsg show={showToast} close={() => { setShowToast(false); if (message.closeParent) showDialog(false) }} params={message}></ToastMsg>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default LoginDialog\r\n","import React from 'react';\r\nimport { Modal,Button} from 'react-bootstrap';\r\n\r\n\r\nconst ConfirmModal = ({ show, onHide, updateDb }) => {\r\n  \r\n  const handleAccept = () => {\r\n    onHide(false);\r\n    updateDb(true);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onHide}\r\n      size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      backdrop=\"static\"\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Update the database\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5>Are you sure?</h5>\r\n        <p></p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onHide}>\r\n          No\r\n        </Button>\r\n\r\n        <Button variant=\"primary\" onClick={handleAccept}>\r\n          Yes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal","import React from 'react';\r\nimport { Modal,Spinner,Button} from 'react-bootstrap';\r\n\r\n\r\nconst OnProgressModal = ({ show,message}) => {\r\n    return (\r\n      <Modal show={show} size=\"sm\" backdrop=\"static\" keyboard={false} centered>\r\n        <Button variant=\"primary\" disabled>\r\n          <Spinner\r\n            as=\"span\"\r\n            animation=\"grow\"\r\n            size=\"sm\"\r\n            role=\"status\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          <span>&nbsp;&nbsp;&nbsp;</span>\r\n          {message}\r\n        </Button>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  export default OnProgressModal","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport userService from \"./services/user-service\";\r\nimport dataService from \"./services/data-service\";\r\n\r\nimport Navigation from \"./nav/Navigation\";\r\nimport LoginDialog from \"./components/LoginDialog\";\r\nimport ConfirmModal from \"./components/ConfirmModal\";\r\nimport OnProgressModal from \"./components/OnProgressModal\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [mongoData, setMongoData] = useState();\r\n  const [user, setUser] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  const [login, setLogin] = useState(false);\r\n  const [progressShow, setProgressShow] = useState(false);\r\n  const [confirmShow, setConfirmShow] = useState(false);\r\n  //const [loadingStatus, setLoadingStatus] = useState(\"\");\r\n  \r\n\r\n  let navigate = useNavigate();\r\n\r\n  const getConfig = () => {\r\n    let _token = `bearer ${token}`;\r\n    const config = {\r\n      headers: { Authorization: _token },\r\n    };\r\n\r\n    return config;\r\n  };\r\n\r\n  const updateDataToMongo = async () => {\r\n    await dataService.updateDataToMongo(getConfig());\r\n  };\r\n\r\n  useEffect(() => {\r\n    let baseUrl = \"/\";\r\n    if (process.env.NODE_ENV === \"development\")\r\n      baseUrl = \"http://localhost:5000\";\r\n\r\n    const socket = socketIOClient(baseUrl);\r\n\r\n    socket.on(\"onProgress\", (p) => {\r\n      console.log(\"message from backend onProgress \" + p);\r\n      //setLoadingStatus(p);\r\n      //alert(p);\r\n      setProgressShow(p);\r\n    });\r\n\r\n    socket.on(\"connect\", (data) => {\r\n      console.log(\"socket connected\");\r\n    });\r\n\r\n    socket.on(\"connected\", (p) => {\r\n      console.log(\"message from backend connected\" + p);\r\n    });\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // tänne kaikki cleaning-jutut\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      let mongoData = await dataService.getDataFromMongo(getConfig());\r\n\r\n      setMongoData(mongoData);\r\n      try {\r\n        navigate(\"/MyActivities\");\r\n      } catch (exception) {\r\n        alert(exception.message);\r\n      }\r\n    };\r\n\r\n    if (user !== \"\") {\r\n      getData();\r\n    }\r\n  }, [token]);\r\n\r\n  const handleRegister = async (user) => {\r\n    const data = await userService.register(user);\r\n\r\n    return data;\r\n  };\r\n\r\n  const handleLogin = async (id, data, func) => {\r\n    if (id === 1) {\r\n      if (data !== null) {\r\n        const response = await userService.login(data);\r\n\r\n        if (response !== null) {\r\n          if (response.code === 200) {\r\n            setUser(response.data.email);\r\n            setUserName(response.data.firstname);\r\n            setAdmin(response.data.admin);\r\n            setToken(response.data.token);\r\n          }\r\n          return response;\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    } else if (id === 2) {\r\n      return await handleRegister(data);\r\n    }\r\n  };\r\n\r\n  const callBack = async (topic, data) => {\r\n    if (topic === \"getActivitiesData\") {\r\n      return mongoData;\r\n    } else if (topic === \"updateDb\") {\r\n      updateDb();\r\n    } else if (topic === \"login\") {\r\n      setLogin(true);\r\n    } else if (topic === \"logout\") {\r\n      setUserName(\"\");\r\n    }\r\n  };\r\n\r\n  const updateDb = () => {\r\n    setConfirmShow(true);\r\n  };\r\n\r\n  const updateDatabase = async (p) => {\r\n    if (p === true) {\r\n      await updateDataToMongo();\r\n    }\r\n  };\r\n\r\n  const style = { backgroundColor: \"#353b45\" };\r\n\r\n  return (\r\n    <Container fluid className=\"App\">\r\n      <div style={style}>        \r\n        <LoginDialog\r\n          _show={login}\r\n          showDialog={setLogin}\r\n          func={handleLogin}\r\n        ></LoginDialog>\r\n\r\n        <ConfirmModal\r\n          show={confirmShow}\r\n          onHide={() => setConfirmShow(false)}\r\n          updateDb={updateDatabase}\r\n        />\r\n        <OnProgressModal show={progressShow} message={\"Loading...\"} />\r\n      </div>\r\n\r\n      <Navigation user={userName} admin={admin} callBack={callBack} />\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; \r\nimport './index.css';\r\nimport App from './App';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router><App /></Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}